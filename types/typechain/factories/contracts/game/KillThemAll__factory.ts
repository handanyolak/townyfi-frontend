/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KillThemAll,
  KillThemAllInterface,
  IKillThemAll,
} from "../../../contracts/game/KillThemAll";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract KtaToken",
        name: "ktaToken_",
        type: "address",
      },
      {
        internalType: "contract KtaGamePassNft",
        name: "ktaGamePassNft_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rngListenerAddr_",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "health",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "energy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "killArmorRewardLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeTownDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeTownDifference",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeZoneDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeZoneDifference",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attackDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "levelDifference",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MaxSetting",
            name: "max",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "health",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "energy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "revive",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "register",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleport",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settleTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportToTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareAttack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareDefend",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.PriceSetting",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "getHealth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "getMana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "getEnergy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "registerReferralReward",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armorAbsorption",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "movement",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.RateSetting",
            name: "rate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "revive",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleport",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportToTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attackableAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "warExpiredAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protectionAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareToAttack",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.TimeSetting",
            name: "time",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "levelToCreateTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "townAreaRadius",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MinSetting",
            name: "min",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "kill",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "referrerKill",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.ExpSetting",
            name: "exp",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resistance",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MultiplierSetting",
            name: "multiplier",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "numberDigits",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.Setting",
        name: "settings_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserLevel[]",
        name: "userLevels_",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxUser",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.TownLevel[]",
        name: "townLevels_",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAtWarPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyHasActiveGamePass",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLevel",
    type: "error",
  },
  {
    inputs: [],
    name: "LimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lessThan",
        type: "uint256",
      },
    ],
    name: "MustLessThan",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lessThanOrEqual",
        type: "uint256",
      },
    ],
    name: "MustLessThanOrEqual",
    type: "error",
  },
  {
    inputs: [],
    name: "MustPositiveValue",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeZone",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetTooFar",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetTownHasProtectionTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "TownMustNotSettled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "TownMustSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "UserAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "UserCannotDoThisToYourself",
    type: "error",
  },
  {
    inputs: [],
    name: "UserCannotDoThisYet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustAlive",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustCitizen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustLeader",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustNotCitizen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustNotLeader",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustRegistered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "LevelUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TownCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "TownDisbanded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TownRecruitmentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TownSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TownVoyaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserArmorBroken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "defender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "healthDamage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "armorDamage",
        type: "uint256",
      },
    ],
    name: "UserAttacked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IKillThemAll.Buy",
        name: "something",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "UserBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gamePassId",
        type: "uint256",
      },
    ],
    name: "UserBoughtGamePass",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gamePassId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gamePassPhase",
        type: "uint256",
      },
    ],
    name: "UserClaimedGamePassPhase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserExitFromTown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IKillThemAll.Get",
        name: "something",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserGot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserJoinedTown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserKilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserMissed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        indexed: false,
        internalType: "struct Coordinates.Coordinate",
        name: "oldCoordinate",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        indexed: false,
        internalType: "struct Coordinates.Coordinate",
        name: "newCoordinate",
        type: "tuple",
      },
    ],
    name: "UserMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IKillThemAll.Prepare",
        name: "to",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "addressesHash",
        type: "bytes32",
      },
    ],
    name: "UserPrepared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "attackerTownId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defenderTownId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "attackableAt",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "expiredAt",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IKillThemAll.War",
        name: "war",
        type: "tuple",
      },
    ],
    name: "WarDeclared",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IKtaGamePass",
            name: "pass",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "phaseLimits",
            type: "uint256[]",
          },
        ],
        internalType: "struct IKillThemAll.GamePass",
        name: "gamePass",
        type: "tuple",
      },
    ],
    name: "addGamePass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.Buy",
        name: "buy_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyGamePass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "changeTownRecruitment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "phase",
        type: "uint256",
      },
    ],
    name: "claimGamePassReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxUser",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.TownLevel",
        name: "townLevel",
        type: "tuple",
      },
    ],
    name: "createTownLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserLevel",
        name: "userLevel",
        type: "tuple",
      },
    ],
    name: "createUserLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "declareWar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "exileCitizen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gamePasses",
    outputs: [
      {
        internalType: "contract IKtaGamePass",
        name: "pass",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.Get",
        name: "get_",
        type: "uint8",
      },
    ],
    name: "get",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
    ],
    name: "getAddressesByCoordinate",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "getCitizensByTownId",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isUserClaimedGamePassPhase",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "joinTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "leaveTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Coordinates.Direction",
        name: "direction",
        type: "uint8",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.Prepare",
        name: "to",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "prepareToConditionBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.Prepare",
        name: "to",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "addressesHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "random",
        type: "uint256",
      },
    ],
    name: "setConditionBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mana",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleportDistance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "killArmorRewardLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safeTownDistance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safeTownDifference",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safeZoneDistance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safeZoneDifference",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attackDistance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelDifference",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.MaxSetting",
        name: "max",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mana",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "revive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "register",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleport",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settleTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleportToTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prepareAttack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prepareDefend",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.PriceSetting",
        name: "price",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "getHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "getMana",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "getEnergy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registerReferralReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armorAbsorption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "movement",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.RateSetting",
        name: "rate",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "revive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleport",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleportToTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attackableAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "warExpiredAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protectionAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prepareToAttack",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.TimeSetting",
        name: "time",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "levelToCreateTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "townAreaRadius",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.MinSetting",
        name: "min",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "kill",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "referrerKill",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.ExpSetting",
        name: "exp",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resistance",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.MultiplierSetting",
        name: "multiplier",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "numberDigits",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "settleTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
    ],
    name: "teleport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "teleportToTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "townById",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "recruitment",
        type: "bool",
      },
      {
        internalType: "enum IKillThemAll.TownStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "enum IKillThemAll.TownMode",
        name: "mode",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "_at",
            type: "uint256",
          },
        ],
        internalType: "struct Timers.BlockNumber",
        name: "protectionAt",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "townIdByCoordinate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "townWar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "int64",
                name: "_x",
                type: "int64",
              },
              {
                internalType: "int64",
                name: "_y",
                type: "int64",
              },
            ],
            internalType: "struct Coordinates.Coordinate",
            name: "coordinate",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "leader",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "citizens",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "exp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "recruitment",
            type: "bool",
          },
          {
            internalType: "enum IKillThemAll.TownStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "enum IKillThemAll.TownMode",
            name: "mode",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "protectionAt",
            type: "tuple",
          },
        ],
        internalType: "struct IKillThemAll.Town",
        name: "town",
        type: "tuple",
      },
    ],
    name: "typechainGenerateTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mana",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armor",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int64",
                name: "_x",
                type: "int64",
              },
              {
                internalType: "int64",
                name: "_y",
                type: "int64",
              },
            ],
            internalType: "struct Coordinates.Coordinate",
            name: "coordinate",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "name",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "exp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "townId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "joinBlock",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.UserTownInfo",
            name: "townInfo",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "_at",
                    type: "uint256",
                  },
                ],
                internalType: "struct Timers.BlockNumber",
                name: "getHealth",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "_at",
                    type: "uint256",
                  },
                ],
                internalType: "struct Timers.BlockNumber",
                name: "getMana",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "_at",
                    type: "uint256",
                  },
                ],
                internalType: "struct Timers.BlockNumber",
                name: "getEnergy",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "_at",
                    type: "uint256",
                  },
                ],
                internalType: "struct Timers.BlockNumber",
                name: "revive",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "_at",
                    type: "uint256",
                  },
                ],
                internalType: "struct Timers.BlockNumber",
                name: "teleport",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "_at",
                    type: "uint256",
                  },
                ],
                internalType: "struct Timers.BlockNumber",
                name: "teleportToTown",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "_at",
                    type: "uint256",
                  },
                ],
                internalType: "struct Timers.BlockNumber",
                name: "prepareToAttack",
                type: "tuple",
              },
            ],
            internalType: "struct IKillThemAll.UserTimer",
            name: "timer",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "defend",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.UserCharPoint",
            name: "charPoint",
            type: "tuple",
          },
        ],
        internalType: "struct IKillThemAll.User",
        name: "user",
        type: "tuple",
      },
    ],
    name: "typechainGenerateUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "health",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "energy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "killArmorRewardLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeTownDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeTownDifference",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeZoneDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeZoneDifference",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attackDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "levelDifference",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MaxSetting",
            name: "max",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "health",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "energy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "revive",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "register",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleport",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settleTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportToTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareAttack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareDefend",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.PriceSetting",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "getHealth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "getMana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "getEnergy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "registerReferralReward",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armorAbsorption",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "movement",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.RateSetting",
            name: "rate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "revive",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleport",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportToTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attackableAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "warExpiredAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protectionAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareToAttack",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.TimeSetting",
            name: "time",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "levelToCreateTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "townAreaRadius",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MinSetting",
            name: "min",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "kill",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "referrerKill",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.ExpSetting",
            name: "exp",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resistance",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MultiplierSetting",
            name: "multiplier",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "numberDigits",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.Setting",
        name: "settings_",
        type: "tuple",
      },
    ],
    name: "updateSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.CharacterInfo",
        name: "charInfo",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "upgradeCharacter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userByAddr",
    outputs: [
      {
        internalType: "uint256",
        name: "health",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mana",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "energy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "armor",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "townId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserTownInfo",
        name: "townInfo",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getHealth",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getMana",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getEnergy",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "revive",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "teleport",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "teleportToTown",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "prepareToAttack",
            type: "tuple",
          },
        ],
        internalType: "struct IKillThemAll.UserTimer",
        name: "timer",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defend",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserCharPoint",
        name: "charPoint",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voyageTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523462000710576200600f80380390816200001e8162000778565b918239808281010390610640821262000710578051916001600160a01b038316830362000710576020820151906001600160a01b038216820362000710576040830151906001600160a01b038216820362000710576105a090605f19011262000710576040519161010083016001600160401b03811184821017620006ad57604052620000b1868501606086016200079e565b8352620000c58685016101e086016200079e565b6020840152620000dc868501610360860162000843565b6040840152620000f3868501610440860162000843565b60608401526200010a8685016105208601620008af565b6080840152620001218685016105608601620008af565b60a0840152620001388685016105a08601620008af565b60c08401526105e084015160e0840152610600840151946001600160401b0386116200071057868501601f878701011215620007105785850151620001876200018182620008e9565b62000778565b96602088838152019089880160208460061b838b0101011162000710578060208b928a0101925b60208560061b838c01010184106200071557505050506106208601519790506001600160401b0388116200071057808601601f89880101121562000710578786015190620002006200018183620008e9565b96602088848152019982820160208560051b83850101011162000710579960208b8301019a5b60208560051b82850101018c10620006e1578a8a60e08b8b8b8b6000543360018060a01b0319821617600055339060018060a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a360805260a05260c05262000296620009ad565b61016081518051600c556020810151600d556040810151600e556060810151600f55608081015160105560a081015160115560c08101516012558381015160135561010081015160145561012081015160155561014081015160165501516017556101606020820151805160185560208101516019556040810151601a556060810151601b556080810151601c5560a0810151601d5560c0810151601e5583810151601f55610100810151602055610120810151602155610140810151602255015160235560c060408201518051602455602081015160255560408101516026556060810151602755608081015160285560a08101516029550151602a5560c060608201518051602b556020810151602c556040810151602d556060810151602e556080810151602f5560a081015160305501516031556020608082015180516032550151603355602060a082015180516034550151603555602060c08201518051603655015160375501516038556200040f62000758565b60019081815260005b60208110620006c3575062000431620004389162000901565b5162000924565b6200044262000758565b81815260005b6020811062000674575062000461620004689162000901565b516200095a565b825160001993848201929183116200058d5760005b838110620005a35785858051908282019182116200058d5760005b828110620004d257604051615608908162000a07823960805181615129015260a0518181816122c50152612919015260c051816104d90152f35b620004de81836200090f565b5190620004ea620009ad565b603b80548681018181116200058d57811115620005775786916000526020600020010154825111156200053257620005266200052c9262000924565b6200099d565b62000498565b60405162461bcd60e51b815260206004820152601e60248201527f4d6178206d7573742067726561746572207468616e206c617374206d617800006044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b620005af81836200090f565b5190620005bb620009ad565b815160208301518082101562000656575050603a8054888101908082116200058d5781101562000577578591600052602060002090821b0101548251036200061257620005266200060c926200095a565b6200047d565b606460405162461bcd60e51b815260206004820152602060248201527f4d696e206d75737420626520657175616c20746f206d6178206f66206c6173746044820152fd5b6044925060405191630bec671f60e21b835260048301526024820152fd5b6040805190810191906001600160401b03831181841017620006ad57602092604052600081526000838201528282850101520162000448565b634e487b7160e01b600052604160045260246000fd5b602090620006d062000738565b600081528282850101520162000418565b60208c8585010312620007105760208080938e620006fe62000738565b905181528152019c019b915062000226565b600080fd5b60206040916200072982958d0187620008af565b8152019301928b9250620001ae565b60405190602082016001600160401b03811183821017620006ad57604052565b60408051919082016001600160401b03811183821017620006ad57604052565b6040519190601f01601f191682016001600160401b03811183821017620006ad57604052565b809291610180918291031262000710576040519081016001600160401b03811182821017620006ad576040528092805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151908301526101208082015190830152610140808201519083015261016080910151910152565b91908260e0910312620007105760405160e081016001600160401b03811182821017620006ad5760405260c0808294805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a08501520151910152565b91908260409103126200071057604080519081016001600160401b03811182821017620006ad576040526020808294805184520151910152565b6001600160401b038111620006ad5760051b60200190565b805115620005775760200190565b8051821015620005775760209160051b010190565b603b5468010000000000000000811015620006ad576001810180603b558110156200057757603b60005260206000200190519055565b603a5468010000000000000000811015620006ad576001810180603a5581101562000577576020600191603a6000528160002090831b0192805184550151910155565b60001981146200058d5760010190565b6000546001600160a01b03163303620009c257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe6101e080604052600436101561001457600080fd5b60006101405260003560e01c90816302e112fe14613e9e575080630f4b006814613e29578063179930e614613bb95780631a7f292e14613ae657806323599848146139f057806323f2c8601461384957806324b3fec1146136fd57806334806ab71461369857806347b3555614612d4257806347c8cd67146128f95780634a062cf8146128c55780634e79706d14612888578063542e472e1461266b578063559c26a01461259257806362d65621146124385780636ab46748146121a657806370e87aaf1461202e578063715018a614611fc857806388ddf5ce14611e7e5780638da5cb5b14611e5457806395851a6514611d58578063ab1b8c9f14611bde578063b0be3ef014611a3d578063b40efd94146119cc578063b5119f67146118f8578063b5fb105d146117c4578063c3c5a54714611781578063c78728f81461137c578063cbf73ced146112a1578063d018db3e14611225578063d22057a91461101c578063d4d8c7fb14610f3a578063e06174e414610c90578063e0ab52521461084a578063e3f739881461055b578063ed85b092146104b1578063f2fde38b146103e7578063f6ef55f6146103a6578063f71bfc6d146102c85763f72d0b3b146101de57600080fd5b346102c15760203660031901126102c15760043560038110156102c15733610140515260016020526040610140512054156102a95760407fc4339ff8eddaa8620fa7f1c2ff4c6f15aa2e75b0bdd3da115f87a97232a490b69133610140515260016020526102818161014051848120905001600b8101908054916024850154815443030483019185600c015483811060011461029e57508290555b4390556144a0565b82519161028d8161430f565b82526020820152a161014051604051f35b908190559150610279565b60405163103d166d60e11b8152336004820152602490fd5b6101405180fd5b346102c15761014051806003193601126103a35733905260016020526040610140512054156102a95733610140515260016020526101405160096040822001549052600360205260018060a01b03600260406101405120015416330361038b573361014051526001602052610140516009604082200154905260036020526101405160076040822001805460ff80821615169060ff19161790556040517f4ee375d1604f90ce7da222f9abb2432afe39c2de259e62d833f4389c08a8b8738282a1f35b60405163b7785bf560e01b8152336004820152602490fd5b80fd5b346102c15760403660031901126102c15760043561014051526004602052610140516040812090602435905260205260206040610140512054604051908152f35b346102c15760203660031901126102c15761040061412d565b610408614390565b6001600160a01b03908116801561045d57600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09084a36101405190f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346102c15760603660031901126102c15760043560028110156102c1576044359060243590337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316036105495761050f816142ef565b600103610532576101405152600a60205260406101405120555b61014051604051f35b6101405152600b6020526040610140512055610529565b60405163ea8e4eb560e01b8152600490fd5b346102c1576020806003193601126102c1576004353361014051526001908183526101405160099081604082200154905260039081855260018060a01b03600260406101405120015416330361038b57336101405152838552610140518160408220015480915282865260ff600760406101405120015460081c166105df816142ef565b85036108325750336101405152838552610140519483826040882001549652828152610623600860406101405120016040519061061b82614008565b5481526155bc565b156108205785841461080e578561014051528181526101405184604082205415918215926107ca575b50506107b85761065e602e5443614744565b9161067b6040519361066f85614008565b808552602f5490614744565b936040519461068986614008565b85526040519560808701978789106001600160401b038a11176107a2577fe3a7901504dedf738044fbb4b92858fd8201c672248b8834aae40af5ee013cfc996080996040528089528589019483865260408a0197885260608a01988952836101405152865261014051604081208a5181558651848201558851516002820155858a5151910155528161014051604081208a5181558651848201558851516002820155858a51519101555282855260ff600760406101405120015460081c1690610751826142ef565b0361077d575b50506040519451855251908401525151604083015251516060820152a161014051604051f35b610140515282526007604061014051200161010061ff00198254161790558780610757565b634e487b7160e01b600052604160045260246000fd5b604051636092830f60e11b8152600490fd5b909150526107e78360406101405120016040519061061b82614008565b15806107f5575b848861064c565b50836101405152818152604061014051205415156107ee565b6040516301fb3a9760e71b8152600490fd5b604051634cf9987b60e01b8152600490fd5b6024906040519063493f415b60e01b82526004820152fd5b346102c157600319602036820181136102c157600435906001600160401b03928383116102c15760a09083360301126102c1576040519261088a84614075565b6001600160a01b0390600484013582811681036102c157855282850194602491828601358752604082019060449485880135835260608401936064988981013586526084810135908482116102c1570194366023870112156102c1576004860135956108f587614287565b9661090360405198896140ab565b808852888b89019160051b830101913683116102c157898c9101915b838310610c80575050505060808201958652610939614390565b845194815180871015610c6457508b51158015610c5a575b610c485785431015610c2b57603954958615159081610b50575b5050610140515b8751516000198101908111610b3757811015610a0c5761099381895161458f565b518851600183018093116109f357826109ab9161458f565b51116109725760405162461bcd60e51b8152600481018c9052601b818b01527f4c696d697473206d75737420626520696e20415343206f726465720000000000818c01528c90fd5b8a634e487b7160e01b6101405152601160045261014051fd5b509187918a9794938d600160401b95868a1015610b1e57610a3460019a8b810160395561429e565b959095610b06575185546001600160a01b031916911617845551888401555160028301555160038201559251805194600494909401939092908511610aee578411610ad7575084908254848455808510610aba575b5001906101405152610140519380852090855b848110610aa95786604051f35b835183820155928101928501610a9c565b610ad190846000528584600020918201910161456b565b86610a89565b6101408051634e487b7160e01b9052604160045251fd5b506101408051634e487b7160e01b9052604160045251fd5b86634e487b7160e01b61014051526101405180600452fd5b85634e487b7160e01b6101405152604160045261014051fd5b89634e487b7160e01b6101405152601160045261014051fd5b6000198801908882119081610c12576003610b6a8461429e565b5001549080821015610bf657505082610bda575b82610ba3575b5050610b91578c8061096b565b60405163ab7ed0dd60e01b8152600490fd5b909150610bc157610bb560039161429e565b50015443108d80610b84565b88634e487b7160e01b6101405152601160045261014051fd5b50600091506002610bea8261429e565b50015443101591610b7e565b8d92508c604051926306fa2fb360e31b84526004840152820152fd5b8b634e487b7160e01b6101405152601160045261014051fd5b604051630bec671f60e21b81524360048201528089018790528990fd5b60405163059b93c160e01b8152600490fd5b5086515115610951565b868a918a60405192630bec671f60e21b84526004840152820152fd5b82358152918101918c910161091f565b346102c15761014051806003193601126103a357604051610cb081614023565b600c548152600d5460209081830152600e546040830152600f546060830152601054608083015260115460a083015260125460c083015260135460e0830152601454906101009182840152601554610120908185015260165461014085015260175490610160918286015260405193610d2885614023565b601854855260195484860152601a546040860152601b546060860152601c546080860152601d5460a0860152601e5460c0860152601f5460e08601528354908501526021549084015260225461014084015260235490830152604051610d8d8161403f565b60245481526025548282015260265460408201526027546060820152602854608082015260295460a0820152602a5460c0820152604051610dcd8161403f565b602b548152602c5483820152602d546040820152602e546060820152602f54608082015260305460a082015260315460c0820152604051610e0d8161405a565b603254815260335484820190815260405191610e288361405a565b60345483526035549386840194855260405195610e448761405a565b6036548752603754978701978852603854986040519a8b610e6491614319565b6101808b01610e7291614319565b80516103008b015260208101516103208b015260408101516103408b015260608101516103608b015260808101516103808b015260a08101516103a08b015260c001516103c08a015280516103e08a015260208101516104008a015260408101516104208a015260608101516104408a015260808101516104608a015260a08101516104808a015260c001516104a0890152516104c0880152516104e0870152516105008601525161052085015251610540840152516105608301526105808201526105a090f35b346102c15760203660031901126102c1576004356101405152600360205261016060406101405120610f6b8161419b565b90600181015460018060a01b0360028301541660ff60048401546005850154600686015490600787015492848460081c1695858560101c169760086040519a610fb38c614008565b01548a52610fd4604051809c60208091805160070b8452015160070b910152565b60408b015260608a0152608089015260a088015260c087015216151560e0850152610ffe816142ef565b61010084015261100d8161430f565b61012083015251610140820152f35b346102c15760403660031901126102c157611035614117565b3361014051526020906001825260076040610140512001546112135733610140515260018252604061014051206004356005820155600c548155600d546001820155600e54600282015560016007820155600881019060018060a01b03831691826001600160601b0360a01b8254161790556040516110b381614008565b43905243600b8201556040516110c881614008565b43905243600c8201556040516110dd81614008565b43905243600d8201556040516110f281614008565b43905243600f82015560405161110781614008565b43905243601082015560405161111c81614008565b4390526011439101556101405180526005835261014051604081208452604081205490339052600684526101405190604082205580526005835261116d610140516040812085526040339120614437565b6040519061014051937fed934535030b053f4ffe202396a25c123ff8013205206b4e1007f5f9291395808584a184826111b7575b6105296111b087601d546144a0565b30336150df565b82939495509160019252526007604061014051200154156111fe5750506111b0610529916111f56111ed601d5460275490614480565b8092336150df565b918380806111a1565b6304a0266d60e11b8252600482015260249150fd5b604051634f2532fb60e11b8152600490fd5b346102c15760203660031901126102c15761123e61412d565b6001600160a01b03811633811461080e578061014051526001602052604061014051205415611289575033610140515260016020526040610140512054156102a95761052990614785565b6024906040519063103d166d60e11b82526004820152fd5b346102c15760203660031901126102c1576004356039548110156102c157600560809160396000520260018060a01b03817fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d3015416907fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d4810154907fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d67fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d582015491015491604051938452602084015260408301526060820152f35b346102c15736600319016105a081126102c1576040519061010082018281106001600160401b038211176107a2578060405261018080921261177c576113c181614023565b60043581526024356101208401526044356101408401526064356101608401526084358284015260a4356101a084015260c4356101c084015260e4356101e08401526101043561020084015261012435610220840152610144356102408401526101643561026084015282523661018319011261177c5760405161144481614023565b6101843581526101a43560208201526101c43560408201526101e43560608201526102043560808201526102243560a08201526102443560c08201526102643560e0820152610284356101008201526102a4356101208201526102c4356101408201526102e435610160820152602082015260e06103031936011261177c576040516114cf8161403f565b6103043581526103243560208201526103443560408201526103643560608201526103843560808201526103a43560a08201526103c43560c0820152604082015260e06103e31936011261177c576040516115298161403f565b6103e43581526104043560208201526104243560408201526104443560608201526104643560808201526104843560a08201526104a43560c0820152606082015260406104c31936011261177c576040516115838161405a565b6104c43581526104e4356020820152608082015260403661050319011261177c576040516115b08161405a565b61050435815261052435602082015260a082015260403661054319011261177c5760e0906040516115e08161405a565b61054435815261056435602082015260c08201526105843582820152611604614390565b61016081518051600c556020810151600d556040810151600e556060810151600f55608081015160105560a081015160115560c08101516012558381015160135561010081015160145561012081015160155561014081015160165501516017556101606020820151805160185560208101516019556040810151601a556060810151601b556080810151601c5560a0810151601d5560c0810151601e5583810151601f55610100810151602055610120810151602155610140810151602255015160235560c060408201518051602455602081015160255560408101516026556060810151602755608081015160285560a08101516029550151602a5560c060608201518051602b556020810151602c556040810151602d556060810151602e556080810151602f5560a081015160305501516031556020608082015180516032550151603355602060a082015180516034550151603555602060c082015180516036550151603755015160385561014051604051f35b600080fd5b346102c15760203660031901126102c1576001600160a01b036117a261412d565b1661014051526001602052602060076040610140512001541515604051908152f35b346102c15761014051806003193601126103a357339052600160208181526040610140512054156102a9573361014051528181526009604061014051200154156118e0573361014051528181526101405160096040822001548091526003825260ff600760406101405120015460081c1661183e816142ef565b830361083257503361014051528181526010604061014051200191602d549061187560405161186c81614008565b855481526155bc565b156118ce576118c39260039133610140515281526101405160096040822001549052526118b06118aa6040610140512061419b565b33614dab565b6118bd60215430336150df565b43614744565b905561014051604051f35b60405163a3f2b5c560e01b8152600490fd5b6040516316f4a16560e21b8152336004820152602490fd5b346102c15760203660031901126102c15761191161412d565b6001600160a01b038181169033821461080e57336101405152600160205261014051600960408220015490526003602052600260406101405120015416330361038b5733610140515260016020526101405190600960408320015491526009604061014051200154036119875761052990614de2565b60405162461bcd60e51b815260206004820152601f60248201527f436974697a656e20646f6573206e6f742062656c6f6e6720746f20746f776e006044820152606490fd5b346102c15760403660031901126102c157611a39611a26611a2d611a1a6119f2366140da565b805160070b60005260056020526020604060002091015160070b600052602052604060002090565b60405192838092614512565b03826140ab565b60405191829182614157565b0390f35b346102c157602060031981813601126102c157600435916001600160401b03918284116102c15783360390810192610180938481126102c15760405194610160860191868310848411176107a2576040908382521261177c57611a9f8261405a565b611aab876004016140cc565b8252611ab9602488016140cc565b908601528452604485013583850152611ad460648601614143565b604085015260848501359081116102c1578401366023820112156102c157600481013590611b0182614287565b91611b0f60405193846140ab565b80835260248584019160051b830101913683116102c1576024869101915b838310611bc65750505050606084015260a4840135608084015260c484013560a084015260e484013560c084015261010484013580151581036102c15760e084015261012484013560028110156102c15761010084015261014484013560038110156102c15761012084015261016319011261177c576101409061016460405193611bb785614008565b01358352015261014051604051f35b8190611bd184614143565b8152019101908590611b2d565b346102c15760403660031901126102c15760043560028110156102c157611c03614117565b6001600160a01b03811633811461080e57806101405152600192602093808552604061014051205415611d3f573361014051528085526040610140512054156102a957336101405152808552601160406101405120019460315493611c76604051611c6d81614008565b885481526155bc565b156118ce57611cbe60165491336101405152848452611c9d6004604061014051200161419b565b906101405152848452611cb86004604061014051200161419b565b90615527565b11611d2d5760407f370dae7af2ce7d4f2dc14c518e24b86e8864985212093cc0a93ffc18a2d08ec691611cf46118c3973361530d565b825191611d00876142ef565b868352820152a1611d10826142ef565b03611d22576118bd60225430336150df565b6118bd6023546111b0565b604051632076d7ab60e01b8152600490fd5b60405163103d166d60e11b815260048101849052602490fd5b346102c15761014051806003193601126103a35733905260016020526040610140512054611e1b57336101405152600160205260406101405120600e810190604051611da381614008565b82548091528015611de257604051611dc591611dbe82614008565b81526155bc565b156118ce57600c549055610140519055610529601c5430336150df565b60405162461bcd60e51b8152602060048201526011602482015270151a5b595c881b5d5cdd081899481cd95d607a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270155cd95c881b5d5cdd0818994819195859607a1b6044820152606490fd5b346102c15761014051806003193601126103a357546040516001600160a01b039091168152602090f35b346102c15760403660031901126102c157604051611e9b8161405a565b6004358152602081019060249182358152611eb4614390565b8151815180821015611fab575050603a546000198101818111611f9257611edc600191614c71565b500154835103611f4e57600160401b811015611f3557806001611f029201603a55614c71565b929092611f1d57906001915183555191015561014051604051f35b83634e487b7160e01b61014051526101405180600452fd5b83634e487b7160e01b6101405152604160045261014051fd5b60405162461bcd60e51b8152602060048201819052818601527f4d696e206d75737420626520657175616c20746f206d6178206f66206c6173746044820152606490fd5b84634e487b7160e01b6101405152601160045261014051fd5b604492508460405192630bec671f60e21b84526004840152820152fd5b346102c15761014051806003193601126103a357611fe4614390565b600080546001600160a01b03198116825560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a36101405190f35b346102c15760203660031901126102c15760043560048110156102c15733610140515260016020526040610140512054156102a9576105299033610140515260016020526120e8600460406101405120602a54612090600283019182546144a0565b90550161209c8161419b565b926120a681614c10565b806120ef5750805467ffffffffffffffff60401b19811667ffffffffffffffff60401b604092831c60070b60010190921b9190911617815561419b565b61419b565b9033614f0c565b6120f881614c10565b600181036121265750805460018160070b016001600160401b0316906001600160401b03191617815561419b565b61212f81614c10565b600281036121705750805467ffffffffffffffff60401b19811667ffffffffffffffff60401b604092831c60070b6000190190921b9190911617815561419b565b61217981614c10565b6003036120e35780546000198160070b016001600160401b0316906001600160401b03191617815561419b565b346102c15761014051806003193601126103a3573390526001602052600760406101405120015415612420576039546000198101818111612406576121ea9061429e565b50906040519160a08301908382106001600160401b038311176123af5760049160405260018060a01b03815416845260018101546020850152600281015460408501526003810154606085015201604051808260208294549384815201906101405152610140519260208420935b8181106123ed57505061226d925003826140ab565b608083019081527f392603d012939b9e138c3c78034ab15ec4803adc229772e11a7925a1d2ba14286020604051848152a16122ad602084015130336150df565b610140805133905260016020525160408120600601547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316929091833b156103a357506040519363c0dc21c760e01b8552336004860152602485015260806044850152606061012485019560018060a01b038151166084870152602081015160a4870152604081015160c4870152015160e4850152519360a0610104850152845180915260206101448501950190610140515b8181106123d7576064860184905261014051869081808a0381838a5af180156123c9576123985761014051604051f35b6001600160401b0381116123af5760405280610529565b634e487b7160e01b61014051526041600452602461014051fd5b6040513d61014051823e3d90fd5b8251875260209687019690920191600101612368565b8454835260019485019486945060209093019201612258565b634e487b7160e01b61014051526011600452602461014051fd5b6040516304a0266d60e11b8152336004820152602490fd5b346102c15760203660031901126102c1576001600160a01b038061245a61412d565b1661014051526001602052610140516040902090815491600181015491600282015490600383015490600484016124909061419b565b600585015460068601549160078701549360088801541694600988016124b5906141be565b966124c2600b8a016141dc565b986012016124cf906141be565b996040519b8c5260208c015260408b015260608a0152608089016125029160208091805160070b8452015160070b910152565b60c088015260e08701526101008601526101208501528051610140850152602001516101608401528051516101808401526020810151516101a08401526040810151516101c08401526060810151516101e084015260808101515161020084015260a08101515161022084015260c00151516102408301528051610260830152602001516102808201526102a090f35b346102c15760203660031901126102c1576040516125af81614008565b60043581526125bc614390565b603b546000198101818111612406576125d4906143e8565b50548251111561262657600160401b8110156123af578060016125fa9201603b556143e8565b91909161260d5751905561014051604051f35b634e487b7160e01b610140515260246101405180600452fd5b60405162461bcd60e51b815260206004820152601e60248201527f4d6178206d7573742067726561746572207468616e206c617374206d617800006044820152606490fd5b346102c1576102a03660031901126102c15760405161268981614023565b6004358152602090602435828201526044356040820152606435606082015260406083193601126102c1576040516126c08161405a565b6084358060070b81036102c157815260a4358060070b81036102c15781840152608082015260c43560a082015260e43560c08201526101043560e0820152610124356001600160a01b03811681036102c1576101008201526040366101431901126102c1576040516127318161405a565b610144358152610164358382015261012082015236610183190160e081126102c15782604051916127618361403f565b126102c15760405161277281614008565b6101843581528152826101a3193601126102c15760405161279281614008565b6101a435815283820152826101c3193601126102c1576040516127b481614008565b6101c43581526040820152826101e3193601126102c1576040516127d781614008565b6101e4358152606082015282610203193601126102c1576040516127fa81614008565b610204358152608082015282610223193601126102c15760405161281d81614008565b61022435815260a082015282610243193601126102c15760405161284081614008565b61024435815260c08201526101408201526040366102631901126102c157610160906040519261286f8461405a565b6102643584526102843590840152015261014051604051f35b346102c15760203660031901126102c15760043561014051526003602052611a39611a26611a2d6003604061014051200160405192838092614512565b346102c15761014051806003193601126103a35733905260016020526009604061014051200154156118e0576105296145a3565b346102c1576020806003193601126102c1576004359060018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000169260395491604051635895cc5960e11b81523360048201526024938482015260449585828881845afa9182156123c9576101405192612d13575b508115612cd75760405191633b23ea5960e21b8352600483015281858161014051935afa80156123c957610140519081928291612be4575b5060808301858151511115612baa5733610140515260028852610140518360408220915288526101405186604082209152885260ff604061014051205416612b67576129fb86612a17925161458f565b51913361014051526001895260066040610140512001546144a0565b10612b245760407fa7c4e3a8b7dbecae5e52c37373c2bb1f8cce1710780cc0d546ce5907658a022a9133610140515260028852610140518183822091528852610140518683822091528852816101405120600160ff1982541617905581519081528588820152a15116604051908482019263379607f560e01b845284830152838252612aa282614090565b6101405192839251915af4612ab5614c1a565b81612b0b575b5015612aca5761014051604051f35b606492601d7f47616d6520506173732064656c65676174652063616c6c206572726f72000000926040519462461bcd60e51b86526004860152840152820152fd5b612b1e9150838082518301019101614c59565b84612abb565b60405162461bcd60e51b815260048101879052601d818701527f596f7520686176656e277420726561636865642070686173652079657400000081890152606490fd5b60405162461bcd60e51b815260048101899052601a818901527f5468697320706861736520616c726561647920636c61696d6564000000000000818b0152606490fd5b60405162461bcd60e51b81526004810189905260148189015273151a1a5cc81c1a185cd9481b9bdd08199bdd5b9960621b818b0152606490fd5b9250503d8091833e612bf681836140ab565b81016060828203126102c15781519186810151916001600160401b03928381116102c15782019260a0848303126102c15760405193612c3485614075565b805187811681036102c1578552898101518a860152604081015160408601526060810151606086015260808101519182116102c157019080601f830112156102c1578151612c8181614287565b92612c8f60405194856140ab565b8184528a8085019260051b8201019283116102c1578a809101915b838310612cc75750505050608083015260400151909190886129ab565b82518152918101918b9101612caa565b60405162461bcd60e51b81526004810187905260168187015275596f752068617665206e6f742074686973207061737360501b81890152606490fd5b9091508581813d8311612d3b575b612d2b81836140ab565b810103126102c157519087612973565b503d612d21565b346102c15761014051806003193601126103a35733905260016020526101405160096040822001549052600360205260018060a01b03600260406101405120015416330361038b573361014051526001602052610140516009604082200154809152600360205260ff600760406101405120015460081c16612dc3816142ef565b6001036108325733610140515260016020526101405160096040822001548091526009602052612e03600260406101405120016040519061061b82614008565b156118ce57612e9681612e7392610140515260036020526101405190600360408320019160096020526040812054821460001461367757506101405152600960205261014051600160408220015490526003602052612e7a60036040610140512001915b60405194858092614512565b03846140ab565b612e8c6040518092816101c052614512565b036101c0516140ab565b61014051608052604051612ea98161405a565b610140515b60408110613506575060805260408051612ec78161405a565b36903760408051612ed78161405a565b3690376001600160a01b03612eeb82614582565b51166101405152600160205260096040610140512001546101605260018060a01b03612f196101c051614582565b511661014051526001602052604061014051205460018060a01b03612f406101c051614582565b511661014051526001602052610140519160036040842001546036549060285493856001610100528060c052610120525b835160c051908110806134f6575b1561344557612fa2906001600160a01b0390612f9b908761458f565b511661506d565b158015613424575b61341657612fc860018060a01b03612f9b610120516101c05161458f565b1580156133d6575b6133c657612fe36040518060e05261405a565b60c0516001600160a01b0390612ff9908661458f565b511661014051526001602052604061014051206130ad60126040519261301e84614023565b8054845260018101546020850152600281015460408501526003810154606085015261304c6004820161419b565b6080850152600581015460a0850152600681015460c0850152600781015460e085015260088101546001600160a01b031661010085015261308f600982016141be565b6101208501526130a1600b82016141dc565b610140850152016141be565b61016082015260e05152610120516101c0516001600160a01b03916130d19161458f565b511661014051526001602052604061014051206130f660126040519261301e84614023565b610160820152602060e051015261311760e051806080526101005190614751565b5152606061312a6101005160e051614751565b51015261313d604051806101805261405a565b61315660e061314d868251614751565b51015182614558565b610180515261316e60e061314d610100518251614751565b60206101805101526131856040518060a05261405a565b60606131966101005160e051614751565b5101516101405190156133c157506131bb836131b58661018051614751565b51614480565b60a0515260606131cd8560e051614751565b510151610140516101a052156133bb576131f1836131b56101005161018051614751565b6101a052925b6101a051602060a05101525b6132108161018051614751565b5161321d8260a051614751565b51606061322f6101005160e051614751565b510151613347575b506132476101005160e051614751565b51518111156133285750610140515b6132656101005160e051614751565b51526132766101005160e051614751565b5151156132a957600181810311612406576001039260016101005181031161240657610100516001036101005292613203565b926101206132bc6101005160e051614751565b51015151610160510361331857600160c0510160c0525b6132df8460e051614751565b51519360606132f08260e051614751565b5101519060010360018111612406579461010051600103600181116124065761010052612f71565b60016101205101610120526132d3565b6133429061333b6101005160e051614751565b51516144a0565b613256565b60606133586101005160e051614751565b5101518111156133995760606133736101005160e051614751565b5101519003900361014051606061338f6101005160e051614751565b5101525b85613237565b8091039060606133ae6101005160e051614751565b5101908151039052613393565b926131f7565b6131bb565b6001610120510161012052612f71565b5061341060018060a01b036133f1610120516101c05161458f565b51166001600160a01b0316600090815260016020526040902054151590565b15612fd0565b600160c0510160c052612f71565b5060c05161343f906001600160a01b03906133f1908761458f565b15612faa565b866101206134698161345c61010051608051614751565b5101515192608051614751565b51015151908161014051526003602052600860406101405160078282200161ff00198154169055200161349e60305443614744565b905561014051526009602052610140516134cd6040822060036000918281558260018201558260028201550155565b52610140516134f16040822060036000918281558260018201558260028201550155565b604051f35b506101c051516101205110612f7f565b60209060405161351581614023565b610140518152610140518382015261014051604082015261014051606090818301526040516135438161405a565b610140518152610140518582015260808301526101405160a09081840152610140519060c091828501526101405160e08501526101405161010085015260405161358c8161405a565b6101405181526101405187820152610120850152604051926135ad8461403f565b6040516135b981614008565b61014051815284526040516135cd81614008565b610140518152878501526040516135e381614008565b6101405181526040850152604051906135fb82614008565b61014051825284015260405161361081614008565b61014051815260808401526040519061362882614008565b6101405182528301526040519061363e82614008565b6101405182528201526101408201526040516136598161405a565b61014051815261014051848201526101608201528184015201612eae565b9050604081205490526003602052612e7a6003604061014051200191612e67565b346102c15760603660031901126102c1576001600160a01b036136b961412d565b166101405152600260205261014051604081209060243590526020526101405160408120906044359052602052602060ff6040610140512054166040519015158152f35b346102c15760403660031901126102c1573361014051526001806020526040610140512054156102a9573361014051528060205280600960406101405120015415151461383157336101405152806020526040610140512060078101546032541161381f5781603c540180603c556009820155600a43910155336101405152600760205261014051806040812055603c549052600360205260406101405120906004358183015560028201336001600160601b0360a01b825416179055600582015560243560068201556137d43360038301614437565b6040516137e081614008565b4390526008439101557fe00488e2e98ca7ca572c756b132f0725dc25de7413dbecbe9d6f4b2e7e3d8bcd61014051604051a1610529601f5430336150df565b60405163a7d8043560e01b8152600490fd5b6040516374c489b760e01b8152336004820152602490fd5b346102c1576020806003193601126102c1576004358061014051526003825260ff600760406101405120015460081c16613882816142ef565b60010361083257336101405152600182526040610140512054156102a95733610140515260018252600160096040610140512001541515146138315780610140515260038252604061014051209060ff600783015416156139ab57600382019081546138f160058501546143e8565b50541115613966576006929161052994604061393493336101405152600183526101405190828220906009820155600a4391015560078454935220553390614437565b7f9848c4ded74d92cdb8e7dab4a391a14520cfd5191d964c18c67b8d634e338fa461014051604051a1015430336150df565b60405162461bcd60e51b815260048101859052601c60248201527f546f776e2773206d6178696d756d206c696d69742072656163686564000000006044820152606490fd5b60405162461bcd60e51b815260048101849052601d60248201527f546f776e20726563727569746d656e74206d757374206265206f70656e0000006044820152606490fd5b346102c15760603660031901126102c15760043560048110156102c157613a15614117565b906044359160018060a01b0316918261014051526001602052600760406101405120015415613acd57826101405152600160205281604061014051200192818454018084600c015410613abb5760806111b0947fb390c3cf774cb9afdbde8540cd4c753bbc84f66f99a638d3e6a179c18adb2f5392610529975560188101549360405191613aa281614c10565b82526020820152846040820152336060820152a1614558565b604051631930e3c960e11b8152600490fd5b6040516304a0266d60e11b815260048101849052602490fd5b346102c15760403660031901126102c157613b00366140da565b33610140515260016020526040610140512054156102a9573361014051526001602052600f604061014051200190602c54613b49604051613b4081614008565b845481526155bc565b156118ce57336101405152600160205260406101405120613b7583613b706004840161419b565b615527565b928360105410613abb5783613bb16111b0926118bd94613ba96002613b9f6118c39a602a54614558565b92019182546144a0565b905533614dab565b601e54614558565b346102c15761014051806003193601126103a357339052600160208181526040610140512054156102a95733610140515281815261014051600960408220015490526003815260018060a01b03600260406101405120015416330361038b5733610140515281815261014051916009604084200154809352600382526007928160ff8560406101405120015460081c16613c52816142ef565b811414613e115750336101405152808252613c756004604061014051200161419b565b8051840b9083810151850b9280603354870b613c9181866144c3565b90613c9c81876144ea565b613cb0613ca9838a6144c3565b92896144ea565b92908a0b928a0b935b613d4d575b610529897f6966303f1eced2dcdc651aa4755084b584e4318845fda73fe3d4623f1d88a9748c8b8b8b8b336101405152865261014051936009604086200154809552600387526101405191613d17604084209182615354565b0161010061ff001982541617905552600484526101405190604082209152835261014051906040822055604051a15430336150df565b808a0b838113613e0b5785949392919082865b613d74575b505084018a0b90919293613cb9565b80919293949596508c0b87878213613e00575082610140515260048c5261014051906040822091528b526040610140512054613dbb578695949392919086018c0b86613d60565b60405162461bcd60e51b8152600481018c9052601e60248201527f546865726520697320616c7265616479206120746f776e206e656172627900006044820152606490fd5b969594939250613d65565b50613cbe565b602490604051906338f01fa360e21b82526004820152fd5b346102c15760403660031901126102c15760043560028110156102c1576024359033610140515260016020526040610140512054156102a957601290336101405152600160205261014051604080822091600860205220613e8b8582546144a0565b9055010190815401905561014051604051f35b3461177c57600036600319011261177c57336000526020906001825260406000205415613ff357503361014051526001815261014051600960408220015490526003815260018060a01b03600260406101405120015416330361038b57336101405152600181526101405160096040822001548091526003825260ff600760406101405120015460081c16613f32816142ef565b600103610832576003823361014051526001815261014051600960408220015480915282825260406101405120613f688161419b565b5160070b6101405152600483526040610140512083613f868361419b565b015160070b6101405152835261014051908160408120556fffffffffffffffffffffffffffffffff1981541690555252610140516007604082200161ff001981541690556040517f520106d58a734e46d65212defed1010f3034fc288069b0b144f95a8826966de68282a1f35b63103d166d60e11b8152336004820152602490fd5b602081019081106001600160401b038211176107a257604052565b61018081019081106001600160401b038211176107a257604052565b60e081019081106001600160401b038211176107a257604052565b604081019081106001600160401b038211176107a257604052565b60a081019081106001600160401b038211176107a257604052565b606081019081106001600160401b038211176107a257604052565b90601f801991011681019081106001600160401b038211176107a257604052565b35908160070b820361177c57565b604090600319011261177c57604051906140f38261405a565b816004358060070b810361177c578152602435908160070b820361177c5760200152565b602435906001600160a01b038216820361177c57565b600435906001600160a01b038216820361177c57565b35906001600160a01b038216820361177c57565b6020908160408183019282815285518094520193019160005b82811061417e575050505090565b83516001600160a01b031685529381019392810192600101614170565b906040516141a88161405a565b60208193548060070b835260401c60070b910152565b906040516141cb8161405a565b602060018294805484520154910152565b9060409160c083516141ed8161403f565b6006819580516141fc81614008565b855481528352805161420d81614008565b600186015481526020840152805161422481614008565b6002860154815281840152805161423a81614008565b600386015481526060840152805161425181614008565b600486015481526080840152805161426881614008565b6005860154815260a0840152519361427f85614008565b015483520152565b6001600160401b0381116107a25760051b60200190565b6039548110156142d9576005906039600052027fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d30190600090565b634e487b7160e01b600052603260045260246000fd5b600211156142f957565b634e487b7160e01b600052602160045260246000fd5b600311156142f957565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151908301526101208082015190830152610140808201519083015261016080910151910152565b6000546001600160a01b031633036143a457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603b548110156142d957603b6000527fbbe3212124853f8b0084a66a2d057c2966e251e132af3691db153ab65f0d1a4d0190600090565b80548210156142d95760005260206000200190600090565b90815491600160401b8310156107a2578261445a91600161447e9501815561441f565b90919082549060031b9160018060a01b039283811b93849216901b16911916179055565b565b811561448a570490565b634e487b7160e01b600052601260045260246000fd5b919082039182116144ad57565b634e487b7160e01b600052601160045260246000fd5b600791820b910b0390677fffffffffffffff198212677fffffffffffffff8313176144ad57565b9060070b9060070b0190677fffffffffffffff198212677fffffffffffffff8313176144ad57565b90815480825260208092019260005281600020916000905b828210614538575050505090565b83546001600160a01b03168552938401936001938401939091019061452a565b80600019048211811515166144ad570290565b818110614576575050565b6000815560010161456b565b8051156142d95760200190565b80518210156142d95760209160051b010190565b33600081815260016020818152604080842060090154808552600383528185206002015494956001600160a01b039592949193919286168114906145e690614de2565b6145f3575b505050505050565b8286526003815283862095845193614619856146128160038c01614512565b03866140ab565b8451156146b4575080948661462d86614582565b51168252838352600a9081818420015492865194865b8681106146805750505050505050506002929161465f9161458f565b51169101906001600160601b0360a01b8254161790553880808080806145eb565b8a61468b828b61458f565b511683528782528484842001548681106146a8575b508701614643565b909950945088876146a0565b7fb441db81fd75991e264aa0aa46021dffc504714d36474959f348baaa4711119d9750600892965080959450819391526003865282848120918183558201558260028201556003810180548482558061472b575b5050826004820155826005820155826006820155826007820155015551908152a1565b61473d9185528785209081019061456b565b3880614708565b919082018092116144ad57565b9060028110156142d95760051b0190565b818103929160001380158285131691841216176144ad57565b811561448a570690565b60018060a01b0390818116906000928284526001906020918083526040948587206009878920015488526003855260ff6007888a20015460081c166147c9816142ef565b831480614c01575b8015614ba6575b614b95573388528285528688209260175494600785018054956007850154976148018989614762565b8d811315614b8657905b10614b755760165461482e6148226004840161419b565b611cb86004890161419b565b11614b645761483d8a3361530d565b8c52600a89528b8b8120549760365490601284015461485b91614744565b61486491614558565b8c60385491614872836152ff565b61487c908c61477b565b61488591614744565b92614890338f61530d565b8152600b8d522054996037549060138901546148ab91614744565b6148b491614558565b906148be906152ff565b6148c8908b61477b565b6148d191614744565b90602954868401908154906148e5916144a0565b905580821015614b3157938d938896938c8f94998f9b60607f6307f864e292b8b478e4773e4d8fe91baec3ad209719c44f8fa8ee3509cb214f9161492b859e859d6144a0565b8b9060038601968d88549081614aca575b505086548281811115614aba5750508d80975b558b5193845283015289820152a1156149b4575b505050505050505050505061499a575b61497e575b50505050565b61498b600b92339061530d565b84525281205538808080614978565b6149a4833361530d565b8552600a82528484812055614973565b614a17600893614a0c7f6ecacfde2e90222a6d4377bfaced638b5d38f5c8de0fb2d61f2ecfeb418a9bb99d60038e60098e8e89614a1d9a548c81614a7d575b50505501548d5252614a06898c2061419b565b90614dab565b603454905490614558565b33614cba565b0154169182614a52575b50505050600e614a39602b5443614744565b9101558751908152a18383388089818a81808080614963565b6007614a6e92614a7495603554938682528a5220015490614558565b90614cba565b89388a81614a27565b87614a99910191614a938354916011549061477b565b90614744565b80600f5410600014614ab35750600f5490555b388c6149f3565b9055614aac565b614ac3916144a0565b809761494f565b92909350614ada60285482614480565b8091038094808311600014614b235750507f36c1a72e805b9bd1c876c23fc9549eb59cb56059b901e3edafc808fe8d310a22908954900380940192808a558d51a15b388e61493c565b909350819450038855614b1c565b505050505050505050505050907f911054ae34ddae86568fd549eb969e265697de65f8af56a07ec407d7c4cc66fa9151a1565b8a51632076d7ab60e01b8152600490fd5b8a51631930e3c960e11b8152600490fd5b614b8f90615343565b9061480b565b8651631c05ddfd60e11b8152600490fd5b50818852828552614bbb6004888a200161419b565b8751614bc68161405a565b8981528987820152614bd881836153bd565b60155410159182614beb575b50506147d8565b614bf592506153bd565b60145410153880614be4565b50614c0b8661506d565b6147d1565b600411156142f957565b3d15614c54573d906001600160401b0382116107a25760405191614c48601f8201601f1916602001846140ab565b82523d6000602084013e565b606090565b9081602091031261177c5751801515810361177c5790565b603a548110156142d957603a60005260011b7fa2999d817b6757290b50e8ecf3fa939673403dd35c97de392fdb343b4015ce9e0190600090565b60001981146144ad5760010190565b603a54600019810192919083116144ad57614cdd614cd784614c71565b506141be565b9060018060a01b031690600093828552600180916020958287526007604095868a209089614d1060068401958654614744565b918286550151809111614da3575b5001935b614d31575b5050505050505050565b835483614d3d82614c71565b500154825410614d9d57808314614d9d57614d5790614cab565b845585885260088752848820614d6d8154614cab565b9055827f4dbe5dd715d5de967a3ac9df2fd6d454c3b7f26dda8fa2f901a39e2d72066ce5888751898152a1614d22565b50614d27565b835538614d1e565b9061447e9160018060a01b0381166000526001602052600460406000200190614ddd83614dd78461419b565b93615354565b614f0c565b6001600160a01b039081166000818152600160209081526040808320600981015484526003808452828520018054919796939594929390916000198101908111614eb55797614e7183600a93614e5b7f3fccef893be81c6be1778379e9f4d669791262858206768f8945022971bce95e9b9c889761441f565b90549060031b1c16808903614e8b575b50614ec9565b8260098201550155828152600784528181205551908152a1565b88865260078a528786205490614ea58161445a848661441f565b865260078a528786205538614e6b565b634e487b7160e01b84526011600452602484fd5b80548015614ef6576000190190614ee0828261441f565b81549060018060a01b039060031b1b1916905555565b634e487b7160e01b600052603160045260246000fd5b91614f178183615527565b1561506857614f4882805160070b60005260056020526020604060002091015160070b600052602052604060002090565b8054909160001982019182116144ad5761501960a094614ff97ffad5a4971e126f5ef258899e58b6559a37309e12a1e04e6ac13f13a3046adcdc97614fb7614f93615033978961441f565b905460001960018c1b018481169a9260031b9190911c16808a036150365750614ec9565b614fe385805160070b60005260056020526020604060002091015160070b600052602052604060002090565b8054886000526006602052604060002055614437565b604051948552602085019060208091805160070b8452015160070b910152565b606083019060208091805160070b8452015160070b910152565ba1565b896000526006602052604060002054906150548161445a848661441f565b600052600660205260406000205538614e6b565b505050565b6001600160a01b03166000818152600160205260408082206150b292906150969060040161419b565b938152600160205260098282200154815260036020522061419b565b906150bd81836153bd565b601354101591826150cd57505090565b6150d79250615527565b601254101590565b9091806150eb57505050565b6040516323b872dd60e01b602082019081526001600160a01b03938416602483015293831660448201526064808201929092529081529160a08301917f000000000000000000000000000000000000000000000000000000000000000016906001600160401b038311848410176107a257600080916151af95856040526151718661405a565b602086527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152519082855af16151a9614c1a565b9161522b565b805190816151bb575050565b6020806151cc938301019101614c59565b156151d357565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b9192901561528d575081511561523f575090565b3b156152485790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156152a05750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b8285106152e6575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506152c3565b604d81116144ad57600a0a90565b6040519060208201926001600160601b0319809260601b16845260601b1660348201526028815261533d81614090565b51902090565b600160ff1b81146144ad5760000390565b602061447e9280516001600160401b0319845416906001600160401b0316178355015160070b81549060401b67ffffffffffffffff60401b169067ffffffffffffffff60401b1916179055565b919091600083820193841291129080158216911516176144ad57565b6153f6615405926020806153da8551845160070b9060070b614762565b600081131561541757945b015160070b91015160070b90614762565b600081131561540857906153a1565b90565b61541190615343565b906153a1565b61542090615343565b946153e5565b801561552157600090818113806001146154fa57156154d4575b800290600190815b6001811161549157508082136001600160ff1b0384900483111661547d57808212600160ff1b84900583121661547d57500290565b634e487b7160e01b81526011600452602490fd5b926001600160ff1b0381900481116154c057600184166154b7575b80029260011c615448565b809202916154ac565b634e487b7160e01b82526011600452602482fd5b6001600160ff1b0381900581121561544057634e487b7160e01b82526011600452602482fd5b506001600160ff1b0381900481111561544057634e487b7160e01b82526011600452602482fd5b50600090565b61541161554a6155619360208061554f61554a8751855160070b9060070b614762565b615426565b95015160070b91015160070b90614762565b600060038211156155ae57508060019080821c8281018091116144ad5791905b83831061558e5750505090565b909192506155a5836155a08184614480565b614744565b821c9190615581565b906155b65790565b50600190565b5180151590816155ca575090565b90504310159056fea26469706673582212206bc262c094c03333fbf5ec4f7031ce0a9d52bcfec11b9b94e3af86923a512f4864736f6c63430008100033";

type KillThemAllConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KillThemAllConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KillThemAll__factory extends ContractFactory {
  constructor(...args: KillThemAllConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ktaToken_: PromiseOrValue<string>,
    ktaGamePassNft_: PromiseOrValue<string>,
    rngListenerAddr_: PromiseOrValue<string>,
    settings_: IKillThemAll.SettingStruct,
    userLevels_: IKillThemAll.UserLevelStruct[],
    townLevels_: IKillThemAll.TownLevelStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KillThemAll> {
    return super.deploy(
      ktaToken_,
      ktaGamePassNft_,
      rngListenerAddr_,
      settings_,
      userLevels_,
      townLevels_,
      overrides || {}
    ) as Promise<KillThemAll>;
  }
  override getDeployTransaction(
    ktaToken_: PromiseOrValue<string>,
    ktaGamePassNft_: PromiseOrValue<string>,
    rngListenerAddr_: PromiseOrValue<string>,
    settings_: IKillThemAll.SettingStruct,
    userLevels_: IKillThemAll.UserLevelStruct[],
    townLevels_: IKillThemAll.TownLevelStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ktaToken_,
      ktaGamePassNft_,
      rngListenerAddr_,
      settings_,
      userLevels_,
      townLevels_,
      overrides || {}
    );
  }
  override attach(address: string): KillThemAll {
    return super.attach(address) as KillThemAll;
  }
  override connect(signer: Signer): KillThemAll__factory {
    return super.connect(signer) as KillThemAll__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KillThemAllInterface {
    return new utils.Interface(_abi) as KillThemAllInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KillThemAll {
    return new Contract(address, _abi, signerOrProvider) as KillThemAll;
  }
}
