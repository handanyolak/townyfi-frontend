/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  KtaGamePass1,
  KtaGamePass1Interface,
} from "../../../../../contracts/game/pass/passes/KtaGamePass1";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "phase",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userByAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "health",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mana",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "energy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "armor",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "townId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserTownInfo",
        name: "townInfo",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getHealth",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getMana",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getEnergy",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "revive",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "teleport",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "teleportToTown",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "prepareToAttack",
            type: "tuple",
          },
        ],
        internalType: "struct IKillThemAll.UserTimer",
        name: "timer",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defend",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserCharPoint",
        name: "charPoint",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761034a908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063379607f51461024a5763989e5ea91461003357600080fd5b34610247576020366003190112610247576001600160a01b03600435818116908190036102435782526001602052604082209182549260018101549260028201549060038301546100826102a5565b60048501548060070b825260401c60070b6020820152600585015490600686015492600787015494600888015416956100bd600989016102fb565b976040519960e08b01908b821067ffffffffffffffff83111761022f57506040526100e66102db565b600b82015481528a526100f76102db565b600c820154815260208b015261010b6102db565b600d820154815260408b015261011f6102db565b600e820154815260608b01526101336102db565b600f820154815260808b01526101476102db565b6010820154815260a08b015261015b6102db565b6011820154815260c08b0152601201610173906102fb565b996040519b8c5260208c015260408b015260608a0152805160070b60808a01526020015160070b60a089015260c088015260e08701526101008601526101208501528051610140850152602001516101608401528051516101808401526020810151516101a08401526040810151516101c08401526060810151516101e084015260808101515161020084015260a08101515161022084015260c00151516102408301528051610260830152602001516102808201526102a090f35b634e487b7160e01b81526041600452602490fd5b8280fd5b80fd5b50346102475760203660031901126102475760209060019060043580610284575060406064913381526001855220555b6040519015158152f35b820361029e5733815260018352600160408220015561027a565b905061027a565b604051906040820182811067ffffffffffffffff8211176102c557604052565b634e487b7160e01b600052604160045260246000fd5b604051906020820182811067ffffffffffffffff8211176102c557604052565b9060016103066102a5565b92805484520154602083015256fea264697066735822122025de714d487ce391405c762dc1bcec4e7ce5743280dd4997510470dd3779024864736f6c63430008140033";

type KtaGamePass1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KtaGamePass1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KtaGamePass1__factory extends ContractFactory {
  constructor(...args: KtaGamePass1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "KtaGamePass1";
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KtaGamePass1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KtaGamePass1__factory {
    return super.connect(runner) as KtaGamePass1__factory;
  }
  static readonly contractName: "KtaGamePass1";

  public readonly contractName: "KtaGamePass1";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KtaGamePass1Interface {
    return new Interface(_abi) as KtaGamePass1Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KtaGamePass1 {
    return new Contract(address, _abi, runner) as unknown as KtaGamePass1;
  }
}
