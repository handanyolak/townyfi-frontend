/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  KillThemAll,
  KillThemAllInterface,
  IKillThemAll,
} from "../../../contracts/game/KillThemAll";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract KtaToken",
        name: "ktaToken_",
        type: "address",
      },
      {
        internalType: "contract KtaGamePassNft",
        name: "ktaGamePassNft_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rngListenerAddr_",
        type: "address",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "health",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "energy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "killArmorRewardLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeTownDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeTownDifference",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeZoneDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeZoneDifference",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attackDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "levelDifference",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MaxSetting",
            name: "max",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "health",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "energy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "revive",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "register",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleport",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settleTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportToTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareAttack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareDefend",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.PriceSetting",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "getHealth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "getMana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "getEnergy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "registerReferralReward",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armorAbsorption",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "movement",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.RateSetting",
            name: "rate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "revive",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleport",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportToTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attackableAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "warExpiredAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protectionAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareToAttack",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.TimeSetting",
            name: "time",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "levelToCreateTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "townAreaRadius",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MinSetting",
            name: "min",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "kill",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "referrerKill",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.ExpSetting",
            name: "exp",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resistance",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MultiplierSetting",
            name: "multiplier",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "numberDigits",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.Setting",
        name: "settings_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserLevel[]",
        name: "userLevels_",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxUser",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.TownLevel[]",
        name: "townLevels_",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAtWarPeriod",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyHasActiveGamePass",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLevel",
    type: "error",
  },
  {
    inputs: [],
    name: "LimitExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lessThan",
        type: "uint256",
      },
    ],
    name: "MustLessThan",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lessThanOrEqual",
        type: "uint256",
      },
    ],
    name: "MustLessThanOrEqual",
    type: "error",
  },
  {
    inputs: [],
    name: "MustPositiveValue",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "SafeZone",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetTooFar",
    type: "error",
  },
  {
    inputs: [],
    name: "TargetTownHasProtectionTime",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "TownMustNotSettled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "TownMustSettled",
    type: "error",
  },
  {
    inputs: [],
    name: "UserAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "UserCannotDoThisToYourself",
    type: "error",
  },
  {
    inputs: [],
    name: "UserCannotDoThisYet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustAlive",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustCitizen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustLeader",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustNotCitizen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustNotLeader",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserMustRegistered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "LevelUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TownCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "TownDisbanded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TownRecruitmentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TownSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TownVoyaged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserArmorBroken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "defender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "healthDamage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "armorDamage",
        type: "uint256",
      },
    ],
    name: "UserAttacked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IKillThemAll.Buy",
        name: "something",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "UserBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gamePassId",
        type: "uint256",
      },
    ],
    name: "UserBoughtGamePass",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gamePassId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gamePassPhase",
        type: "uint256",
      },
    ],
    name: "UserClaimedGamePassPhase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserExitFromTown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IKillThemAll.Get",
        name: "something",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UserGot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserJoinedTown",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserKilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserMissed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        indexed: false,
        internalType: "struct Coordinates.Coordinate",
        name: "oldCoordinate",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        indexed: false,
        internalType: "struct Coordinates.Coordinate",
        name: "newCoordinate",
        type: "tuple",
      },
    ],
    name: "UserMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IKillThemAll.Prepare",
        name: "to",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "addressesHash",
        type: "bytes32",
      },
    ],
    name: "UserPrepared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "UserRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "attackerTownId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defenderTownId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "attackableAt",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "expiredAt",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct IKillThemAll.War",
        name: "war",
        type: "tuple",
      },
    ],
    name: "WarDeclared",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IKtaGamePass",
            name: "pass",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "phaseLimits",
            type: "uint256[]",
          },
        ],
        internalType: "struct IKillThemAll.GamePass",
        name: "gamePass",
        type: "tuple",
      },
    ],
    name: "addGamePass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.Buy",
        name: "buy_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyGamePass",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "changeTownRecruitment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "phase",
        type: "uint256",
      },
    ],
    name: "claimGamePassReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "createTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxUser",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.TownLevel",
        name: "townLevel",
        type: "tuple",
      },
    ],
    name: "createTownLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "min",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserLevel",
        name: "userLevel",
        type: "tuple",
      },
    ],
    name: "createUserLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "declareWar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "exileCitizen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "gamePasses",
    outputs: [
      {
        internalType: "contract IKtaGamePass",
        name: "pass",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.Get",
        name: "get_",
        type: "uint8",
      },
    ],
    name: "get",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
    ],
    name: "getAddressesByCoordinate",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "getCitizensByTownId",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isUserClaimedGamePassPhase",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "townId",
        type: "uint256",
      },
    ],
    name: "joinTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "leaveTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Coordinates.Direction",
        name: "direction",
        type: "uint8",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.Prepare",
        name: "to",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "prepareToConditionBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.Prepare",
        name: "to",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "addressesHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "random",
        type: "uint256",
      },
    ],
    name: "setConditionBonus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "settings",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mana",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleportDistance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "killArmorRewardLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safeTownDistance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safeTownDifference",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safeZoneDistance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safeZoneDifference",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attackDistance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "levelDifference",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.MaxSetting",
        name: "max",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mana",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "revive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "register",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleport",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "settleTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleportToTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prepareAttack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prepareDefend",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.PriceSetting",
        name: "price",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "getHealth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "getMana",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "getEnergy",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "registerReferralReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "armorAbsorption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "movement",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.RateSetting",
        name: "rate",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "revive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleport",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "teleportToTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attackableAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "warExpiredAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "protectionAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prepareToAttack",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.TimeSetting",
        name: "time",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "levelToCreateTown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "townAreaRadius",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.MinSetting",
        name: "min",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "kill",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "referrerKill",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.ExpSetting",
        name: "exp",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resistance",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.MultiplierSetting",
        name: "multiplier",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "numberDigits",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "settleTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
    ],
    name: "teleport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "teleportToTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "townById",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "leader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "recruitment",
        type: "bool",
      },
      {
        internalType: "enum IKillThemAll.TownStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "enum IKillThemAll.TownMode",
        name: "mode",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "_at",
            type: "uint256",
          },
        ],
        internalType: "struct Timers.BlockNumber",
        name: "protectionAt",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "townIdByCoordinate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "townWar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "health",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "energy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "killArmorRewardLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeTownDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeTownDifference",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeZoneDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "safeZoneDifference",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attackDistance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "levelDifference",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MaxSetting",
            name: "max",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "health",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "mana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "energy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armor",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "revive",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "register",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleport",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "createTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "settleTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportToTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareAttack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareDefend",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.PriceSetting",
            name: "price",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "getHealth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "getMana",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "getEnergy",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "registerReferralReward",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "armorAbsorption",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "movement",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.RateSetting",
            name: "rate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "revive",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleport",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "teleportToTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attackableAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "warExpiredAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "protectionAt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prepareToAttack",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.TimeSetting",
            name: "time",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "levelToCreateTown",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "townAreaRadius",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MinSetting",
            name: "min",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "kill",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "referrerKill",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.ExpSetting",
            name: "exp",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resistance",
                type: "uint256",
              },
            ],
            internalType: "struct IKillThemAll.MultiplierSetting",
            name: "multiplier",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "numberDigits",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.Setting",
        name: "settings_",
        type: "tuple",
      },
    ],
    name: "updateSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IKillThemAll.CharacterInfo",
        name: "charInfo",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "upgradeCharacter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userByAddr",
    outputs: [
      {
        internalType: "uint256",
        name: "health",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mana",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "energy",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "armor",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int64",
            name: "_x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "_y",
            type: "int64",
          },
        ],
        internalType: "struct Coordinates.Coordinate",
        name: "coordinate",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "levelId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "townId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "joinBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserTownInfo",
        name: "townInfo",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getHealth",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getMana",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "getEnergy",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "revive",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "teleport",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "teleportToTown",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "_at",
                type: "uint256",
              },
            ],
            internalType: "struct Timers.BlockNumber",
            name: "prepareToAttack",
            type: "tuple",
          },
        ],
        internalType: "struct IKillThemAll.UserTimer",
        name: "timer",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defend",
            type: "uint256",
          },
        ],
        internalType: "struct IKillThemAll.UserCharPoint",
        name: "charPoint",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voyageTown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234620007105762005bf680380390816200001e8162000778565b918239808281010390610640821262000710578051916001600160a01b038316830362000710576020820151906001600160a01b038216820362000710576040830151906001600160a01b038216820362000710576105a090605f19011262000710576040519161010083016001600160401b03811184821017620006ad57604052620000b1868501606086016200079e565b8352620000c58685016101e086016200079e565b6020840152620000dc868501610360860162000843565b6040840152620000f3868501610440860162000843565b60608401526200010a8685016105208601620008af565b6080840152620001218685016105608601620008af565b60a0840152620001388685016105a08601620008af565b60c08401526105e084015160e0840152610600840151946001600160401b0386116200071057868501601f878701011215620007105785850151620001876200018182620008e9565b62000778565b96602088838152019089880160208460061b838b0101011162000710578060208b928a0101925b60208560061b838c01010184106200071557505050506106208601519790506001600160401b0388116200071057808601601f89880101121562000710578786015190620002006200018183620008e9565b96602088848152019982820160208560051b83850101011162000710579960208b8301019a5b60208560051b82850101018c10620006e1578a8a60e08b8b8b8b6000543360018060a01b0319821617600055339060018060a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a360805260a05260c05262000296620009ad565b61016081518051600c556020810151600d556040810151600e556060810151600f55608081015160105560a081015160115560c08101516012558381015160135561010081015160145561012081015160155561014081015160165501516017556101606020820151805160185560208101516019556040810151601a556060810151601b556080810151601c5560a0810151601d5560c0810151601e5583810151601f55610100810151602055610120810151602155610140810151602255015160235560c060408201518051602455602081015160255560408101516026556060810151602755608081015160285560a08101516029550151602a5560c060608201518051602b556020810151602c556040810151602d556060810151602e556080810151602f5560a081015160305501516031556020608082015180516032550151603355602060a082015180516034550151603555602060c08201518051603655015160375501516038556200040f62000758565b60019081815260005b60208110620006c3575062000431620004389162000901565b5162000924565b6200044262000758565b81815260005b6020811062000674575062000461620004689162000901565b516200095a565b825160001993848201929183116200058d5760005b838110620005a35785858051908282019182116200058d5760005b828110620004d2576040516151ef908162000a07823960805181614d1c015260a0518181816121010152612538015260c051816104c30152f35b620004de81836200090f565b5190620004ea620009ad565b603b80548681018181116200058d57811115620005775786916000526020600020010154825111156200053257620005266200052c9262000924565b6200099d565b62000498565b60405162461bcd60e51b815260206004820152601e60248201527f4d6178206d7573742067726561746572207468616e206c617374206d617800006044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b620005af81836200090f565b5190620005bb620009ad565b815160208301518082101562000656575050603a8054888101908082116200058d5781101562000577578591600052602060002090821b0101548251036200061257620005266200060c926200095a565b6200047d565b606460405162461bcd60e51b815260206004820152602060248201527f4d696e206d75737420626520657175616c20746f206d6178206f66206c6173746044820152fd5b6044925060405191630bec671f60e21b835260048301526024820152fd5b6040805190810191906001600160401b03831181841017620006ad57602092604052600081526000838201528282850101520162000448565b634e487b7160e01b600052604160045260246000fd5b602090620006d062000738565b600081528282850101520162000418565b60208c8585010312620007105760208080938e620006fe62000738565b905181528152019c019b915062000226565b600080fd5b60206040916200072982958d0187620008af565b8152019301928b9250620001ae565b60405190602082016001600160401b03811183821017620006ad57604052565b60408051919082016001600160401b03811183821017620006ad57604052565b6040519190601f01601f191682016001600160401b03811183821017620006ad57604052565b809291610180918291031262000710576040519081016001600160401b03811182821017620006ad576040528092805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151908301526101208082015190830152610140808201519083015261016080910151910152565b91908260e0910312620007105760405160e081016001600160401b03811182821017620006ad5760405260c0808294805184526020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a08501520151910152565b91908260409103126200071057604080519081016001600160401b03811182821017620006ad576040526020808294805184520151910152565b6001600160401b038111620006ad5760051b60200190565b805115620005775760200190565b8051821015620005775760209160051b010190565b603b5468010000000000000000811015620006ad576001810180603b558110156200057757603b60005260206000200190519055565b603a5468010000000000000000811015620006ad576001810180603a5581101562000577576020600191603a6000528160002090831b0192805184550151910155565b60001981146200058d5760010190565b6000546001600160a01b03163303620009c257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe6101e080604052600436101561001457600080fd5b60006101405260003560e01c90816302e112fe14613ab4575080630f4b006814613a3f578063179930e6146137cf5780631a7f292e14613708578063235998481461361257806323f2c8601461346b57806324b3fec11461331c57806334806ab7146132b757806347b355561461296157806347c8cd67146125185780634a062cf8146124e45780634e79706d146124a7578063559c26a0146123ce57806362d65621146122745780636ab4674814611fe257806370e87aaf14611e6a578063715018a614611e0457806388ddf5ce14611cba5780638da5cb5b14611c9057806395851a6514611b94578063ab1b8c9f14611a1a578063b40efd94146119b5578063b5119f67146118e1578063b5fb105d146117ad578063c3c5a5471461176a578063c78728f814611365578063cbf73ced1461128a578063d018db3e1461120e578063d22057a914611005578063d4d8c7fb14610f23578063e06174e414610c79578063e0ab525214610834578063e3f7398814610545578063ed85b0921461049b578063f2fde38b146103d1578063f6ef55f614610390578063f71bfc6d146102b25763f72d0b3b146101c857600080fd5b346102ab5760203660031901126102ab5760043560038110156102ab5733610140515260016020526040610140512054156102935760407fc4339ff8eddaa8620fa7f1c2ff4c6f15aa2e75b0bdd3da115f87a97232a490b691336101405152600160205261026b8161014051848120905001600b8101908054916024850154815443030483019185600c015483811060011461028857508290555b439055614093565b82519161027781613eeb565b82526020820152a161014051604051f35b908190559150610263565b60405163103d166d60e11b8152336004820152602490fd5b6101405180fd5b346102ab57610140518060031936011261038d5733905260016020526040610140512054156102935733610140515260016020526101405160096040822001549052600360205260018060a01b036002604061014051200154163303610375573361014051526001602052610140516009604082200154905260036020526101405160076040822001805460ff80821615169060ff19161790556040517f4ee375d1604f90ce7da222f9abb2432afe39c2de259e62d833f4389c08a8b8738282a1f35b60405163b7785bf560e01b8152336004820152602490fd5b80fd5b346102ab5760403660031901126102ab5760043561014051526004602052610140516040812090602435905260205260206040610140512054604051908152f35b346102ab5760203660031901126102ab576103ea613d34565b6103f2613f83565b6001600160a01b03908116801561044757600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09084a36101405190f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346102ab5760603660031901126102ab5760043560028110156102ab576044359060243590337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610533576104f981613ecb565b60010361051c576101405152600a60205260406101405120555b61014051604051f35b6101405152600b6020526040610140512055610513565b60405163ea8e4eb560e01b8152600490fd5b346102ab576020806003193601126102ab576004353361014051526001908183526101405160099081604082200154905260039081855260018060a01b03600260406101405120015416330361037557336101405152838552610140518160408220015480915282865260ff600760406101405120015460081c166105c981613ecb565b850361081c575033610140515283855261014051948382604088200154965282815261060d600860406101405120016040519061060582613c1e565b5481526151a3565b1561080a578584146107f8578561014051528181526101405184604082205415918215926107b4575b50506107a257610648602e5443614337565b916106656040519361065985613c1e565b808552602f5490614337565b936040519461067386613c1e565b85526040519560808701978789106001600160401b038a111761078c577fe3a7901504dedf738044fbb4b92858fd8201c672248b8834aae40af5ee013cfc996080996040528089528589019483865260408a0197885260608a01988952836101405152865261014051604081208a5181558651848201558851516002820155858a5151910155528161014051604081208a5181558651848201558851516002820155858a51519101555282855260ff600760406101405120015460081c169061073b82613ecb565b03610767575b50506040519451855251908401525151604083015251516060820152a161014051604051f35b610140515282526007604061014051200161010061ff00198254161790558780610741565b634e487b7160e01b600052604160045260246000fd5b604051636092830f60e11b8152600490fd5b909150526107d18360406101405120016040519061060582613c1e565b15806107df575b8488610636565b50836101405152818152604061014051205415156107d8565b6040516301fb3a9760e71b8152600490fd5b604051634cf9987b60e01b8152600490fd5b6024906040519063493f415b60e01b82526004820152fd5b346102ab57600319602036820181136102ab57600435906001600160401b03928383116102ab5760a09083360301126102ab576040519261087484613c8b565b6001600160a01b0390600484013582811681036102ab57855282850194602491828601358752604082019060449485880135835260608401936064988981013586526084810135908482116102ab570194366023870112156102ab576004860135956108df87613f6c565b966108ed6040519889613cc1565b808852888b89019160051b830101913683116102ab57898c9101915b838310610c69575050505060808201958652610923613f83565b845194815180871015610c4d57508b51158015610c43575b610c315785431015610c1457603954958615159081610b3a575b5050610140515b8751516000198101908111610b21578110156109f65761097d818951614182565b518851600183018093116109dd578261099591614182565b511161095c5760405162461bcd60e51b8152600481018c9052601b818b01527f4c696d697473206d75737420626520696e20415343206f726465720000000000818c01528c90fd5b8a634e487b7160e01b6101405152601160045261014051fd5b509187918a9794938d600160401b95868a1015610b0857610a1e60019a8b8101603955613e7a565b959095610af0575185546001600160a01b031916911617845551888401555160028301555160038201559251805194600494909401939092908511610ad8578411610ac1575084908254848455808510610aa4575b5001906101405152610140519380852090855b848110610a935786604051f35b835183820155928101928501610a86565b610abb90846000528584600020918201910161415e565b86610a73565b6101408051634e487b7160e01b9052604160045251fd5b506101408051634e487b7160e01b9052604160045251fd5b86634e487b7160e01b61014051526101405180600452fd5b85634e487b7160e01b6101405152604160045261014051fd5b89634e487b7160e01b6101405152601160045261014051fd5b6000198801908882119081610bfb576003610b5484613e7a565b50015490808211610bdf57505082610bc3575b82610b8c575b5050610b7a578c80610955565b60405163ab7ed0dd60e01b8152600490fd5b909150610baa57610b9e600391613e7a565b50015443108d80610b6d565b88634e487b7160e01b6101405152601160045261014051fd5b50600091506002610bd382613e7a565b50015443101591610b67565b8d92508c604051926306fa2fb360e31b84526004840152820152fd5b8b634e487b7160e01b6101405152601160045261014051fd5b604051630bec671f60e21b81524360048201528089018790528990fd5b60405163059b93c160e01b8152600490fd5b508651511561093b565b868a918a60405192630bec671f60e21b84526004840152820152fd5b82358152918101918c9101610909565b346102ab57610140518060031936011261038d57604051610c9981613c39565b600c548152600d5460209081830152600e546040830152600f546060830152601054608083015260115460a083015260125460c083015260135460e0830152601454906101009182840152601554610120908185015260165461014085015260175490610160918286015260405193610d1185613c39565b601854855260195484860152601a546040860152601b546060860152601c546080860152601d5460a0860152601e5460c0860152601f5460e08601528354908501526021549084015260225461014084015260235490830152604051610d7681613c55565b60245481526025548282015260265460408201526027546060820152602854608082015260295460a0820152602a5460c0820152604051610db681613c55565b602b548152602c5483820152602d546040820152602e546060820152602f54608082015260305460a082015260315460c0820152604051610df681613c70565b603254815260335484820190815260405191610e1183613c70565b60345483526035549386840194855260405195610e2d87613c70565b6036548752603754978701978852603854986040519a8b610e4d91613ef5565b6101808b01610e5b91613ef5565b80516103008b015260208101516103208b015260408101516103408b015260608101516103608b015260808101516103808b015260a08101516103a08b015260c001516103c08a015280516103e08a015260208101516104008a015260408101516104208a015260608101516104408a015260808101516104608a015260a08101516104808a015260c001516104a0890152516104c0880152516104e0870152516105008601525161052085015251610540840152516105608301526105808201526105a090f35b346102ab5760203660031901126102ab576004356101405152600360205261016060406101405120610f5481613d8e565b90600181015460018060a01b0360028301541660ff60048401546005850154600686015490600787015492848460081c1695858560101c169760086040519a610f9c8c613c1e565b01548a52610fbd604051809c60208091805160070b8452015160070b910152565b60408b015260608a0152608089015260a088015260c087015216151560e0850152610fe781613ecb565b610100840152610ff681613eeb565b61012083015251610140820152f35b346102ab5760403660031901126102ab5761101e613d1e565b3361014051526020906001825260076040610140512001546111fc5733610140515260018252604061014051206004356005820155600c548155600d546001820155600e54600282015560016007820155600881019060018060a01b03831691826001600160601b0360a01b82541617905560405161109c81613c1e565b43905243600b8201556040516110b181613c1e565b43905243600c8201556040516110c681613c1e565b43905243600d8201556040516110db81613c1e565b43905243600f8201556040516110f081613c1e565b43905243601082015560405161110581613c1e565b4390526011439101556101405180526005835261014051604081208452604081205490339052600684526101405190604082205580526005835261115661014051604081208552604033912061402a565b6040519061014051937fed934535030b053f4ffe202396a25c123ff8013205206b4e1007f5f9291395808584a184826111a0575b61051361119987601d54614093565b3033614cd2565b82939495509160019252526007604061014051200154156111e7575050611199610513916111de6111d6601d5460275490614073565b809233614cd2565b9183808061118a565b6304a0266d60e11b8252600482015260249150fd5b604051634f2532fb60e11b8152600490fd5b346102ab5760203660031901126102ab57611227613d34565b6001600160a01b0381163381146107f8578061014051526001602052604061014051205415611272575033610140515260016020526040610140512054156102935761051390614378565b6024906040519063103d166d60e11b82526004820152fd5b346102ab5760203660031901126102ab576004356039548110156102ab57600560809160396000520260018060a01b03817fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d3015416907fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d4810154907fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d67fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d582015491015491604051938452602084015260408301526060820152f35b346102ab5736600319016105a081126102ab576040519061010082018281106001600160401b0382111761078c5780604052610180809212611765576113aa81613c39565b60043581526024356101208401526044356101408401526064356101608401526084358284015260a4356101a084015260c4356101c084015260e4356101e0840152610104356102008401526101243561022084015261014435610240840152610164356102608401528252366101831901126117655760405161142d81613c39565b6101843581526101a43560208201526101c43560408201526101e43560608201526102043560808201526102243560a08201526102443560c08201526102643560e0820152610284356101008201526102a4356101208201526102c4356101408201526102e435610160820152602082015260e061030319360112611765576040516114b881613c55565b6103043581526103243560208201526103443560408201526103643560608201526103843560808201526103a43560a08201526103c43560c0820152604082015260e06103e3193601126117655760405161151281613c55565b6103e43581526104043560208201526104243560408201526104443560608201526104643560808201526104843560a08201526104a43560c0820152606082015260406104c3193601126117655760405161156c81613c70565b6104c43581526104e435602082015260808201526040366105031901126117655760405161159981613c70565b61050435815261052435602082015260a08201526040366105431901126117655760e0906040516115c981613c70565b61054435815261056435602082015260c082015261058435828201526115ed613f83565b61016081518051600c556020810151600d556040810151600e556060810151600f55608081015160105560a081015160115560c08101516012558381015160135561010081015160145561012081015160155561014081015160165501516017556101606020820151805160185560208101516019556040810151601a556060810151601b556080810151601c5560a0810151601d5560c0810151601e5583810151601f55610100810151602055610120810151602155610140810151602255015160235560c060408201518051602455602081015160255560408101516026556060810151602755608081015160285560a08101516029550151602a5560c060608201518051602b556020810151602c556040810151602d556060810151602e556080810151602f5560a081015160305501516031556020608082015180516032550151603355602060a082015180516034550151603555602060c082015180516036550151603755015160385561014051604051f35b600080fd5b346102ab5760203660031901126102ab576001600160a01b0361178b613d34565b1661014051526001602052602060076040610140512001541515604051908152f35b346102ab57610140518060031936011261038d5733905260016020818152604061014051205415610293573361014051528181526009604061014051200154156118c9573361014051528181526101405160096040822001548091526003825260ff600760406101405120015460081c1661182781613ecb565b830361081c57503361014051528181526010604061014051200191602d549061185e60405161185581613c1e565b855481526151a3565b156118b7576118ac92600391336101405152815261014051600960408220015490525261189961189360406101405120613d8e565b3361499e565b6118a66021543033614cd2565b43614337565b905561014051604051f35b60405163a3f2b5c560e01b8152600490fd5b6040516316f4a16560e21b8152336004820152602490fd5b346102ab5760203660031901126102ab576118fa613d34565b6001600160a01b03818116903382146107f857336101405152600160205261014051600960408220015490526003602052600260406101405120015416330361037557336101405152600160205261014051906009604083200154915260096040610140512001540361197057610513906149d5565b60405162461bcd60e51b815260206004820152601f60248201527f436974697a656e20646f6573206e6f742062656c6f6e6720746f20746f776e006044820152606490fd5b346102ab57611a16611a03611a0a6119f76119cf36613ce2565b805160070b60005260056020526020604060002091015160070b600052602052604060002090565b60405192838092614105565b0382613cc1565b60405191829182613d4a565b0390f35b346102ab5760403660031901126102ab5760043560028110156102ab57611a3f613d1e565b6001600160a01b0381163381146107f857806101405152600192602093808552604061014051205415611b7b5733610140515280855260406101405120541561029357336101405152808552601160406101405120019460315493611ab2604051611aa981613c1e565b885481526151a3565b156118b757611afa60165491336101405152848452611ad960046040610140512001613d8e565b906101405152848452611af460046040610140512001613d8e565b9061510e565b11611b695760407f370dae7af2ce7d4f2dc14c518e24b86e8864985212093cc0a93ffc18a2d08ec691611b306118ac9733614ef4565b825191611b3c87613ecb565b868352820152a1611b4c82613ecb565b03611b5e576118a66022543033614cd2565b6118a6602354611199565b604051632076d7ab60e01b8152600490fd5b60405163103d166d60e11b815260048101849052602490fd5b346102ab57610140518060031936011261038d5733905260016020526040610140512054611c5757336101405152600160205260406101405120600e810190604051611bdf81613c1e565b82548091528015611c1e57604051611c0191611bfa82613c1e565b81526151a3565b156118b757600c549055610140519055610513601c543033614cd2565b60405162461bcd60e51b8152602060048201526011602482015270151a5b595c881b5d5cdd081899481cd95d607a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270155cd95c881b5d5cdd0818994819195859607a1b6044820152606490fd5b346102ab57610140518060031936011261038d57546040516001600160a01b039091168152602090f35b346102ab5760403660031901126102ab57604051611cd781613c70565b6004358152602081019060249182358152611cf0613f83565b8151815180821015611de7575050603a546000198101818111611dce57611d18600191614864565b500154835103611d8a57600160401b811015611d7157806001611d3e9201603a55614864565b929092611d5957906001915183555191015561014051604051f35b83634e487b7160e01b61014051526101405180600452fd5b83634e487b7160e01b6101405152604160045261014051fd5b60405162461bcd60e51b8152602060048201819052818601527f4d696e206d75737420626520657175616c20746f206d6178206f66206c6173746044820152606490fd5b84634e487b7160e01b6101405152601160045261014051fd5b604492508460405192630bec671f60e21b84526004840152820152fd5b346102ab57610140518060031936011261038d57611e20613f83565b600080546001600160a01b03198116825560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a36101405190f35b346102ab5760203660031901126102ab5760043560048110156102ab57336101405152600160205260406101405120541561029357610513903361014051526001602052611f24600460406101405120602a54611ecc60028301918254614093565b905501611ed881613d8e565b92611ee281614803565b80611f2b5750805467ffffffffffffffff60401b19811667ffffffffffffffff60401b604092831c60070b60010190921b91909116178155613d8e565b613d8e565b9033614aff565b611f3481614803565b60018103611f625750805460018160070b016001600160401b0316906001600160401b031916178155613d8e565b611f6b81614803565b60028103611fac5750805467ffffffffffffffff60401b19811667ffffffffffffffff60401b604092831c60070b6000190190921b91909116178155613d8e565b611fb581614803565b600303611f1f5780546000198160070b016001600160401b0316906001600160401b031916178155613d8e565b346102ab57610140518060031936011261038d57339052600160205260076040610140512001541561225c5760395460001981018181116122425761202690613e7a565b50906040519160a08301908382106001600160401b038311176121eb5760049160405260018060a01b03815416845260018101546020850152600281015460408501526003810154606085015201604051808260208294549384815201906101405152610140519260208420935b8181106122295750506120a992500382613cc1565b608083019081527f392603d012939b9e138c3c78034ab15ec4803adc229772e11a7925a1d2ba14286020604051848152a16120e960208401513033614cd2565b610140805133905260016020525160408120600601547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316929091833b1561038d57506040519363c0dc21c760e01b8552336004860152602485015260806044850152606061012485019560018060a01b038151166084870152602081015160a4870152604081015160c4870152015160e4850152519360a0610104850152845180915260206101448501950190610140515b818110612213576064860184905261014051869081808a0381838a5af18015612205576121d45761014051604051f35b6001600160401b0381116121eb5760405280610513565b634e487b7160e01b61014051526041600452602461014051fd5b6040513d61014051823e3d90fd5b82518752602096870196909201916001016121a4565b8454835260019485019486945060209093019201612094565b634e487b7160e01b61014051526011600452602461014051fd5b6040516304a0266d60e11b8152336004820152602490fd5b346102ab5760203660031901126102ab576001600160a01b0380612296613d34565b1661014051526001602052610140516040902090815491600181015491600282015490600383015490600484016122cc90613d8e565b600585015460068601549160078701549360088801541694600988016122f190613db1565b966122fe600b8a01613dcf565b9860120161230b90613db1565b996040519b8c5260208c015260408b015260608a01526080890161233e9160208091805160070b8452015160070b910152565b60c088015260e08701526101008601526101208501528051610140850152602001516101608401528051516101808401526020810151516101a08401526040810151516101c08401526060810151516101e084015260808101515161020084015260a08101515161022084015260c00151516102408301528051610260830152602001516102808201526102a090f35b346102ab5760203660031901126102ab576040516123eb81613c1e565b60043581526123f8613f83565b603b5460001981018181116122425761241090613fdb565b50548251111561246257600160401b8110156121eb578060016124369201603b55613fdb565b9190916124495751905561014051604051f35b634e487b7160e01b610140515260246101405180600452fd5b60405162461bcd60e51b815260206004820152601e60248201527f4d6178206d7573742067726561746572207468616e206c617374206d617800006044820152606490fd5b346102ab5760203660031901126102ab5760043561014051526003602052611a16611a03611a0a6003604061014051200160405192838092614105565b346102ab57610140518060031936011261038d5733905260016020526009604061014051200154156118c957610513614196565b346102ab576020806003193601126102ab576004359060018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000169260395491604051635895cc5960e11b81523360048201526024938482015260449585828881845afa918215612205576101405192612932575b5081156128f65760405191633b23ea5960e21b8352600483015281858161014051935afa801561220557610140519081928291612803575b50608083018581515111156127c95733610140515260028852610140518360408220915288526101405186604082209152885260ff6040610140512054166127865761261a866126369251614182565b5191336101405152600189526006604061014051200154614093565b106127435760407fa7c4e3a8b7dbecae5e52c37373c2bb1f8cce1710780cc0d546ce5907658a022a9133610140515260028852610140518183822091528852610140518683822091528852816101405120600160ff1982541617905581519081528588820152a15116604051908482019263379607f560e01b8452848301528382526126c182613ca6565b6101405192839251915af46126d461480d565b8161272a575b50156126e95761014051604051f35b606492601d7f47616d6520506173732064656c65676174652063616c6c206572726f72000000926040519462461bcd60e51b86526004860152840152820152fd5b61273d915083808251830101910161484c565b846126da565b60405162461bcd60e51b815260048101879052601d818701527f596f7520686176656e277420726561636865642070686173652079657400000081890152606490fd5b60405162461bcd60e51b815260048101899052601a818901527f5468697320706861736520616c726561647920636c61696d6564000000000000818b0152606490fd5b60405162461bcd60e51b81526004810189905260148189015273151a1a5cc81c1a185cd9481b9bdd08199bdd5b9960621b818b0152606490fd5b9250503d8091833e6128158183613cc1565b81016060828203126102ab5781519186810151916001600160401b03928381116102ab5782019260a0848303126102ab576040519361285385613c8b565b805187811681036102ab578552898101518a860152604081015160408601526060810151606086015260808101519182116102ab57019080601f830112156102ab5781516128a081613f6c565b926128ae6040519485613cc1565b8184528a8085019260051b8201019283116102ab578a809101915b8383106128e65750505050608083015260400151909190886125ca565b82518152918101918b91016128c9565b60405162461bcd60e51b81526004810187905260168187015275596f752068617665206e6f742074686973207061737360501b81890152606490fd5b9091508581813d831161295a575b61294a8183613cc1565b810103126102ab57519087612592565b503d612940565b346102ab57610140518060031936011261038d5733905260016020526101405160096040822001549052600360205260018060a01b036002604061014051200154163303610375573361014051526001602052610140516009604082200154809152600360205260ff600760406101405120015460081c166129e281613ecb565b60010361081c5733610140515260016020526101405160096040822001548091526009602052612a22600260406101405120016040519061060582613c1e565b156118b757612ab581612a9292610140515260036020526101405190600360408320019160096020526040812054821460001461329657506101405152600960205261014051600160408220015490526003602052612a9960036040610140512001915b60405194858092614105565b0384613cc1565b612aab60405180928161016052614105565b0361016051613cc1565b610140516101c052604051612ac981613c70565b610140515b6040811061312457506101c05260408051612ae881613c70565b36903760408051612af881613c70565b3690376001600160a01b03612b0c82614175565b51166101405152600160205260096040610140512001546101205260018060a01b03612b3a61016051614175565b511661014051526001602052604061014051205460018060a01b03612b6161016051614175565b51166101405152600160205261014051916003604084200154603654906028549385600161018052806101a05260c0525b83516101a05190811080613115575b1561306257612bc4906001600160a01b0390612bbd9087614182565b5116614c60565b158015613040575b61303057612be960018060a01b03612bbd60c05161016051614182565b158015612ff1575b612fe357612c0460405180608052613c70565b6101a0516001600160a01b0390612c1b9086614182565b51166101405152600160205260406101405120612ccf601260405192612c4084613c39565b80548452600181015460208501526002810154604085015260038101546060850152612c6e60048201613d8e565b6080850152600581015460a0850152600681015460c0850152600781015460e085015260088101546001600160a01b0316610100850152612cb160098201613db1565b610120850152612cc3600b8201613dcf565b61014085015201613db1565b6101608201526080515260018060a01b03612cef60c05161016051614182565b51166101405152600160205260406101405120612d14601260405192612c4084613c39565b61016082015260206080510152612d36608051806101c0526101805190614344565b51526060612d4961018051608051614344565b510152612d5b6040518060e052613c70565b612d7560e0612d6c86608051614344565b5101518261414b565b60e05152612d8d60e0612d6c61018051608051614344565b602060e0510152612da36040518060a052613c70565b6060612db461018051608051614344565b510151610140519015612fde5750612dd883612dd28660e051614344565b51614073565b60a051526060612dea85608051614344565b510151610140516101005215612fd857612e0d83612dd26101805160e051614344565b61010052925b61010051602060a05101525b612e2b8160e051614344565b51612e388260a051614344565b516060612e4a61018051608051614344565b510151612f64575b50612e6261018051608051614344565b5151811115612f455750610140515b612e8061018051608051614344565b5152612e9161018051608051614344565b515115612ec457600181810311612242576001039260016101805181031161224257610180516001036101805292612e1f565b92610120612ed761018051608051614344565b510151516101205103612f375760016101a051016101a0525b612efc84608051614344565b5151936060612f0d82608051614344565b51015190600181810311612242576001039461018051600103600181116122425761018052612b92565b600160c0510160c052612ef0565b612f5f90612f5861018051608051614344565b5151614093565b612e71565b6060612f7561018051608051614344565b510151811115612fb6576060612f9061018051608051614344565b51015190039003610140516060612fac61018051608051614344565b5101525b85612e52565b809103906060612fcb61018051608051614344565b5101908151039052612fb0565b92612e13565b612dd8565b600160c0510160c052612b92565b5061302a60018060a01b0361300b60c05161016051614182565b51166001600160a01b0316600090815260016020526040902054151590565b15612bf1565b60016101a051016101a052612b92565b506101a05161305c906001600160a01b039061300b9087614182565b15612bcc565b866101206130888161307a610180516101c051614344565b51015151926101c051614344565b51015151908161014051526003602052600860406101405160078282200161ff0019815416905520016130bd60305443614337565b905561014051526009602052610140516130ec6040822060036000918281558260018201558260028201550155565b52610140516131106040822060036000918281558260018201558260028201550155565b604051f35b50610160515160c05110612ba1565b60209060405161313381613c39565b6101405181526101405183820152610140516040820152610140516060908183015260405161316181613c70565b6101405181526101405185820152608090818401526101405160a09081850152610140519160c092838601526101405160e0860152610140516101008601526040516131ac81613c70565b6101405181526101405188820152610120860152604051936131cd85613c55565b6040516131d981613c1e565b61014051815285526040516131ed81613c1e565b6101405181528886015260405161320381613c1e565b61014051815260408601526040519061321b82613c1e565b6101405182528501526040519061323182613c1e565b6101405182528401526040519061324782613c1e565b6101405182528301526040519061325d82613c1e565b61014051825282015261014082015260405161327881613c70565b61014051815261014051848201526101608201528184015201612ace565b9050604081205490526003602052612a996003604061014051200191612a86565b346102ab5760603660031901126102ab576001600160a01b036132d8613d34565b166101405152600260205261014051604081209060243590526020526101405160408120906044359052602052602060ff6040610140512054166040519015158152f35b346102ab5760403660031901126102ab5733610140515260018060205260076040610140512001541561225c57336101405152806020528060096040610140512001541515146134535733610140515280602052604061014051206007810154603254116134415781603c540180603c556009820155600a43910155336101405152600760205261014051806040812055603c549052600360205260406101405120906004358183015560028201336001600160601b0360a01b825416179055600582015560243560068201556133f6336003830161402a565b60405161340281613c1e565b4390526008439101557fe00488e2e98ca7ca572c756b132f0725dc25de7413dbecbe9d6f4b2e7e3d8bcd61014051604051a1610513601f543033614cd2565b60405163a7d8043560e01b8152600490fd5b6040516374c489b760e01b8152336004820152602490fd5b346102ab576020806003193601126102ab576004358061014051526003825260ff600760406101405120015460081c166134a481613ecb565b60010361081c57336101405152600182526040610140512054156102935733610140515260018252600160096040610140512001541515146134535780610140515260038252604061014051209060ff600783015416156135cd57600382019081546135136005850154613fdb565b50541115613588576006929161051394604061355693336101405152600183526101405190828220906009820155600a439101556007845493522055339061402a565b7f9848c4ded74d92cdb8e7dab4a391a14520cfd5191d964c18c67b8d634e338fa461014051604051a101543033614cd2565b60405162461bcd60e51b815260048101859052601c60248201527f546f776e2773206d6178696d756d206c696d69742072656163686564000000006044820152606490fd5b60405162461bcd60e51b815260048101849052601d60248201527f546f776e20726563727569746d656e74206d757374206265206f70656e0000006044820152606490fd5b346102ab5760603660031901126102ab5760043560048110156102ab57613637613d1e565b906044359160018060a01b03169182610140515260016020526007604061014051200154156136ef57826101405152600160205281604061014051200192818454018084600c0154106136dd576080611199947fb390c3cf774cb9afdbde8540cd4c753bbc84f66f99a638d3e6a179c18adb2f53926105139755601881015493604051916136c481614803565b82526020820152846040820152336060820152a161414b565b604051631930e3c960e11b8152600490fd5b6040516304a0266d60e11b815260048101849052602490fd5b346102ab5761371636613ce2565b3361014051526001602052604061014051205415610293573361014051526001602052600f604061014051200190602c5461375f60405161375681613c1e565b845481526151a3565b156118b75733610140515260016020526040610140512061378b8361378660048401613d8e565b61510e565b9283601054106136dd57836137c7611199926118a6946137bf60026137b56118ac9a602a5461414b565b9201918254614093565b90553361499e565b601e5461414b565b346102ab57610140518060031936011261038d57339052600160208181526040610140512054156102935733610140515281815261014051600960408220015490526003815260018060a01b0360026040610140512001541633036103755733610140515281815261014051916009604084200154809352600382526007928160ff8560406101405120015460081c1661386881613ecb565b811414613a27575033610140515280825261388b60046040610140512001613d8e565b8051840b9083810151850b9280603354870b6138a781866140b6565b906138b281876140dd565b6138c66138bf838a6140b6565b92896140dd565b92908a0b928a0b935b613963575b610513897f6966303f1eced2dcdc651aa4755084b584e4318845fda73fe3d4623f1d88a9748c8b8b8b8b33610140515286526101405193600960408620015480955260038752610140519161392d604084209182614f3b565b0161010061ff001982541617905552600484526101405190604082209152835261014051906040822055604051a1543033614cd2565b808a0b838113613a215785949392919082865b61398a575b505084018a0b909192936138cf565b80919293949596508c0b87878213613a16575082610140515260048c5261014051906040822091528b5260406101405120546139d1578695949392919086018c0b86613976565b60405162461bcd60e51b8152600481018c9052601e60248201527f546865726520697320616c7265616479206120746f776e206e656172627900006044820152606490fd5b96959493925061397b565b506138d4565b602490604051906338f01fa360e21b82526004820152fd5b346102ab5760403660031901126102ab5760043560028110156102ab5760243590336101405152600160205260406101405120541561029357601290336101405152600160205261014051604080822091600860205220613aa1858254614093565b9055010190815401905561014051604051f35b3461176557600036600319011261176557336000526020906001825260406000205415613c0957503361014051526001815261014051600960408220015490526003815260018060a01b03600260406101405120015416330361037557336101405152600181526101405160096040822001548091526003825260ff600760406101405120015460081c16613b4881613ecb565b60010361081c576003823361014051526001815261014051600960408220015480915282825260406101405120613b7e81613d8e565b5160070b6101405152600483526040610140512083613b9c83613d8e565b015160070b6101405152835261014051908160408120556fffffffffffffffffffffffffffffffff1981541690555252610140516007604082200161ff001981541690556040517f520106d58a734e46d65212defed1010f3034fc288069b0b144f95a8826966de68282a1f35b63103d166d60e11b8152336004820152602490fd5b602081019081106001600160401b0382111761078c57604052565b61018081019081106001600160401b0382111761078c57604052565b60e081019081106001600160401b0382111761078c57604052565b604081019081106001600160401b0382111761078c57604052565b60a081019081106001600160401b0382111761078c57604052565b606081019081106001600160401b0382111761078c57604052565b90601f801991011681019081106001600160401b0382111761078c57604052565b604090600319011261176557604051613cfa81613c70565b6004358060070b81036117655781526024358060070b810361176557602082015290565b602435906001600160a01b038216820361176557565b600435906001600160a01b038216820361176557565b6020908160408183019282815285518094520193019160005b828110613d71575050505090565b83516001600160a01b031685529381019392810192600101613d63565b90604051613d9b81613c70565b60208193548060070b835260401c60070b910152565b90604051613dbe81613c70565b602060018294805484520154910152565b9060409160c08351613de081613c55565b600681958051613def81613c1e565b8554815283528051613e0081613c1e565b6001860154815260208401528051613e1781613c1e565b60028601548152818401528051613e2d81613c1e565b6003860154815260608401528051613e4481613c1e565b6004860154815260808401528051613e5b81613c1e565b6005860154815260a08401525193613e7285613c1e565b015483520152565b603954811015613eb5576005906039600052027fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d30190600090565b634e487b7160e01b600052603260045260246000fd5b60021115613ed557565b634e487b7160e01b600052602160045260246000fd5b60031115613ed557565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151908301526101208082015190830152610140808201519083015261016080910151910152565b6001600160401b03811161078c5760051b60200190565b6000546001600160a01b03163303613f9757565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603b54811015613eb557603b6000527fbbe3212124853f8b0084a66a2d057c2966e251e132af3691db153ab65f0d1a4d0190600090565b8054821015613eb55760005260206000200190600090565b90815491600160401b83101561078c578261404d91600161407195018155614012565b90919082549060031b9160018060a01b039283811b93849216901b16911916179055565b565b811561407d570490565b634e487b7160e01b600052601260045260246000fd5b919082039182116140a057565b634e487b7160e01b600052601160045260246000fd5b600791820b910b0390677fffffffffffffff198212677fffffffffffffff8313176140a057565b9060070b9060070b0190677fffffffffffffff198212677fffffffffffffff8313176140a057565b90815480825260208092019260005281600020916000905b82821061412b575050505090565b83546001600160a01b03168552938401936001938401939091019061411d565b80600019048211811515166140a0570290565b818110614169575050565b6000815560010161415e565b805115613eb55760200190565b8051821015613eb55760209160051b010190565b33600081815260016020818152604080842060090154808552600383528185206002015494956001600160a01b039592949193919286168114906141d9906149d5565b6141e6575b505050505050565b828652600381528386209584519361420c856142058160038c01614105565b0386613cc1565b8451156142a7575080948661422086614175565b51168252838352600a9081818420015492865194865b8681106142735750505050505050506002929161425291614182565b51169101906001600160601b0360a01b8254161790553880808080806141de565b8a61427e828b614182565b5116835287825284848420015486811061429b575b508701614236565b90995094508887614293565b7fb441db81fd75991e264aa0aa46021dffc504714d36474959f348baaa4711119d9750600892965080959450819391526003865282848120918183558201558260028201556003810180548482558061431e575b5050826004820155826005820155826006820155826007820155015551908152a1565b6143309185528785209081019061415e565b38806142fb565b919082018092116140a057565b906002811015613eb55760051b0190565b818103929160001380158285131691841216176140a057565b811561407d570690565b60018060a01b0390818116906000928284526001906020918083526040948587206009878920015488526003855260ff6007888a20015460081c166143bc81613ecb565b8314806147f4575b8015614799575b614788573388528285528688209260175494600785018054956007850154976143f48989614355565b8d81131561477957905b106147685760165461442161441560048401613d8e565b611af460048901613d8e565b11614757576144308a33614ef4565b8c52600a89528b8b8120549760365490601284015461444e91614337565b6144579161414b565b8c6038549161446583614ee6565b61446f908c61436e565b61447891614337565b92614483338f614ef4565b8152600b8d5220549960375490601389015461449e91614337565b6144a79161414b565b906144b190614ee6565b6144bb908b61436e565b6144c491614337565b90602954868401908154906144d891614093565b90558082101561472457938d938896938c8f94998f9b60607f6307f864e292b8b478e4773e4d8fe91baec3ad209719c44f8fa8ee3509cb214f9161451e859e859d614093565b8b9060038601968d885490816146bd575b5050865482818111156146ad5750508d80975b558b5193845283015289820152a1156145a7575b505050505050505050505061458d575b614571575b50505050565b61457e600b923390614ef4565b8452528120553880808061456b565b6145978333614ef4565b8552600a82528484812055614566565b61460a6008936145ff7f6ecacfde2e90222a6d4377bfaced638b5d38f5c8de0fb2d61f2ecfeb418a9bb99d60038e60098e8e896146109a548c81614670575b50505501548d52526145f9898c20613d8e565b9061499e565b60345490549061414b565b336148ad565b0154169182614645575b50505050600e61462c602b5443614337565b9101558751908152a18383388089818a81808080614556565b60076146619261466795603554938682528a522001549061414b565b906148ad565b89388a8161461a565b8761468c9101916146868354916011549061436e565b90614337565b80600f54106000146146a65750600f5490555b388c6145e6565b905561469f565b6146b691614093565b8097614542565b929093506146cd60285482614073565b80910380948083116000146147165750507f36c1a72e805b9bd1c876c23fc9549eb59cb56059b901e3edafc808fe8d310a22908954900380940192808a558d51a15b388e61452f565b90935081945003885561470f565b505050505050505050505050907f911054ae34ddae86568fd549eb969e265697de65f8af56a07ec407d7c4cc66fa9151a1565b8a51632076d7ab60e01b8152600490fd5b8a51631930e3c960e11b8152600490fd5b61478290614f2a565b906143fe565b8651631c05ddfd60e11b8152600490fd5b508188528285526147ae6004888a2001613d8e565b87516147b981613c70565b89815289878201526147cb8183614fa4565b601554101591826147de575b50506143cb565b6147e89250614fa4565b601454101538806147d7565b506147fe86614c60565b6143c4565b60041115613ed557565b3d15614847573d906001600160401b03821161078c576040519161483b601f8201601f191660200184613cc1565b82523d6000602084013e565b606090565b90816020910312611765575180151581036117655790565b603a54811015613eb557603a60005260011b7fa2999d817b6757290b50e8ecf3fa939673403dd35c97de392fdb343b4015ce9e0190600090565b60001981146140a05760010190565b603a54600019810192919083116140a0576148d06148ca84614864565b50613db1565b9060018060a01b031690600093828552600180916020958287526007604095868a20908961490360068401958654614337565b918286550151809111614996575b5001935b614924575b5050505050505050565b83548361493082614864565b500154825410614990578083146149905761494a9061489e565b845585885260088752848820614960815461489e565b9055827f4dbe5dd715d5de967a3ac9df2fd6d454c3b7f26dda8fa2f901a39e2d72066ce5888751898152a1614915565b5061491a565b835538614911565b906140719160018060a01b03811660005260016020526004604060002001906149d0836149ca84613d8e565b93614f3b565b614aff565b6001600160a01b039081166000818152600160209081526040808320600981015484526003808452828520018054919796939594929390916000198101908111614aa85797614a6483600a93614a4e7f3fccef893be81c6be1778379e9f4d669791262858206768f8945022971bce95e9b9c8897614012565b90549060031b1c16808903614a7e575b50614abc565b8260098201550155828152600784528181205551908152a1565b88865260078a528786205490614a988161404d8486614012565b865260078a528786205538614a5e565b634e487b7160e01b84526011600452602484fd5b80548015614ae9576000190190614ad38282614012565b81549060018060a01b039060031b1b1916905555565b634e487b7160e01b600052603160045260246000fd5b91614b0a818361510e565b15614c5b57614b3b82805160070b60005260056020526020604060002091015160070b600052602052604060002090565b8054909160001982019182116140a057614c0c60a094614bec7ffad5a4971e126f5ef258899e58b6559a37309e12a1e04e6ac13f13a3046adcdc97614baa614b86614c269789614012565b905460001960018c1b018481169a9260031b9190911c16808a03614c295750614abc565b614bd685805160070b60005260056020526020604060002091015160070b600052602052604060002090565b805488600052600660205260406000205561402a565b604051948552602085019060208091805160070b8452015160070b910152565b606083019060208091805160070b8452015160070b910152565ba1565b89600052600660205260406000205490614c478161404d8486614012565b600052600660205260406000205538614a5e565b505050565b6001600160a01b0316600081815260016020526040808220614ca59290614c8990600401613d8e565b9381526001602052600982822001548152600360205220613d8e565b90614cb08183614fa4565b60135410159182614cc057505090565b614cca925061510e565b601254101590565b909180614cde57505050565b6040516323b872dd60e01b60208083019182526001600160a01b039485166024840152948416604483015260648083019390935291815260a08101927f00000000000000000000000000000000000000000000000000000000000000001691906001600160401b0384118185101761078c5783604052614d5d84613c70565b8484527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460c0820152823b15614e2657614daa939260009283809351925af1614da461480d565b90614e6b565b80519081614db757505050565b8280614dc793830101910161484c565b15614dcf5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b60405162461bcd60e51b815260048101869052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b90919015614e77575090565b815115614e875750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510614ecd575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350614eaa565b604d81116140a057600a0a90565b6040519060208201926001600160601b0319809260601b16845260601b16603482015260288152614f2481613ca6565b51902090565b600160ff1b81146140a05760000390565b60206140719280516001600160401b0319845416906001600160401b0316178355015160070b81549060401b67ffffffffffffffff60401b169067ffffffffffffffff60401b1916179055565b919091600083820193841291129080158216911516176140a057565b614fdd614fec92602080614fc18551845160070b9060070b614355565b6000811315614ffe57945b015160070b91015160070b90614355565b6000811315614fef5790614f88565b90565b614ff890614f2a565b90614f88565b61500790614f2a565b94614fcc565b801561510857600090818113806001146150e157156150bb575b800290600190815b6001811161507857508082136001600160ff1b0384900483111661506457808212600160ff1b84900583121661506457500290565b634e487b7160e01b81526011600452602490fd5b926001600160ff1b0381900481116150a7576001841661509e575b80029260011c61502f565b80920291615093565b634e487b7160e01b82526011600452602482fd5b6001600160ff1b0381900581121561502757634e487b7160e01b82526011600452602482fd5b506001600160ff1b0381900481111561502757634e487b7160e01b82526011600452602482fd5b50600090565b614ff8615131615148936020806151366151318751855160070b9060070b614355565b61500d565b95015160070b91015160070b90614355565b6000600382111561519557508060019080821c8281018091116140a05791905b8383106151755750505090565b9091925061518c836151878184614073565b614337565b821c9190615168565b9061519d5790565b50600190565b5180151590816151b1575090565b90504310159056fea2646970667358221220877c8c52284537774fe0bdedb7ff11e7a9781b9bc23703b5ef392923d821751d64736f6c63430008100033";

type KillThemAllConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KillThemAllConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KillThemAll__factory extends ContractFactory {
  constructor(...args: KillThemAllConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    ktaToken_: PromiseOrValue<string>,
    ktaGamePassNft_: PromiseOrValue<string>,
    rngListenerAddr_: PromiseOrValue<string>,
    settings_: IKillThemAll.SettingStruct,
    userLevels_: IKillThemAll.UserLevelStruct[],
    townLevels_: IKillThemAll.TownLevelStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KillThemAll> {
    return super.deploy(
      ktaToken_,
      ktaGamePassNft_,
      rngListenerAddr_,
      settings_,
      userLevels_,
      townLevels_,
      overrides || {}
    ) as Promise<KillThemAll>;
  }
  override getDeployTransaction(
    ktaToken_: PromiseOrValue<string>,
    ktaGamePassNft_: PromiseOrValue<string>,
    rngListenerAddr_: PromiseOrValue<string>,
    settings_: IKillThemAll.SettingStruct,
    userLevels_: IKillThemAll.UserLevelStruct[],
    townLevels_: IKillThemAll.TownLevelStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      ktaToken_,
      ktaGamePassNft_,
      rngListenerAddr_,
      settings_,
      userLevels_,
      townLevels_,
      overrides || {}
    );
  }
  override attach(address: string): KillThemAll {
    return super.attach(address) as KillThemAll;
  }
  override connect(signer: Signer): KillThemAll__factory {
    return super.connect(signer) as KillThemAll__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KillThemAllInterface {
    return new utils.Interface(_abi) as KillThemAllInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KillThemAll {
    return new Contract(address, _abi, signerOrProvider) as KillThemAll;
  }
}
